Index.PACKAGES = {"com.jafpl.steps" : [{"name" : "com.jafpl.steps.BindingProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "set", "tail" : "(item: Any): Unit", "member" : "com.jafpl.steps.BindingProvider.set", "link" : "com\/jafpl\/steps\/BindingProvider.html#set(item:Any):Unit", "kind" : "abstract def"}], "shortDescription" : "A data provider.", "trait" : "com\/jafpl\/steps\/BindingProvider.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.BindingSpecification", "shortDescription" : "Useful default binding specifications.", "object" : "com\/jafpl\/steps\/BindingSpecification$.html", "members_class" : [{"member" : "com.jafpl.steps.BindingSpecification#<init>", "error" : "unsupported entity"}, {"label" : "bindings", "tail" : ": Set[String]", "member" : "com.jafpl.steps.BindingSpecification.bindings", "link" : "com\/jafpl\/steps\/BindingSpecification.html#bindings:scala.collection.immutable.Set[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingSpecification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingSpecification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingSpecification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingSpecification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingSpecification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingSpecification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingSpecification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingSpecification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingSpecification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingSpecification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingSpecification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingSpecification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingSpecification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingSpecification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ANY", "tail" : ": BindingSpecification", "member" : "com.jafpl.steps.BindingSpecification.ANY", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#ANY:com.jafpl.steps.BindingSpecification", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingSpecification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/steps\/BindingSpecification.html", "kind" : "object"}, {"name" : "com.jafpl.steps.DataConsumer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/DataConsumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/DataConsumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/DataConsumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/DataConsumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/DataConsumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/DataConsumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/DataConsumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/DataConsumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/DataConsumer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/DataConsumer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/DataConsumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/DataConsumer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/DataConsumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/DataConsumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "receive", "tail" : "(port: String, item: Any, metadata: Metadata): Unit", "member" : "com.jafpl.steps.DataConsumer.receive", "link" : "com\/jafpl\/steps\/DataConsumer.html#receive(port:String,item:Any,metadata:com.jafpl.messages.Metadata):Unit", "kind" : "abstract def"}], "shortDescription" : "Interface for sending outputs from atomic steps.", "trait" : "com\/jafpl\/steps\/DataConsumer.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.DataConsumerProxy", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setConsumer", "tail" : "(provider: DataConsumer): Unit", "member" : "com.jafpl.steps.DataConsumerProxy.setConsumer", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#setConsumer(provider:com.jafpl.steps.DataConsumer):Unit", "kind" : "abstract def"}], "shortDescription" : "A data consumer.", "trait" : "com\/jafpl\/steps\/DataConsumerProxy.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.PortSpecification", "shortDescription" : "Useful default port binding specifications.", "object" : "com\/jafpl\/steps\/PortSpecification$.html", "members_class" : [{"label" : "checkCardinality", "tail" : "(port: String, count: Long): Unit", "member" : "com.jafpl.steps.PortSpecification.checkCardinality", "link" : "com\/jafpl\/steps\/PortSpecification.html#checkCardinality(port:String,count:Long):Unit", "kind" : "def"}, {"label" : "cardinality", "tail" : "(port: String): Option[String]", "member" : "com.jafpl.steps.PortSpecification.cardinality", "link" : "com\/jafpl\/steps\/PortSpecification.html#cardinality(port:String):Option[String]", "kind" : "def"}, {"label" : "ports", "tail" : "(): Set[String]", "member" : "com.jafpl.steps.PortSpecification.ports", "link" : "com\/jafpl\/steps\/PortSpecification.html#ports():Set[String]", "kind" : "def"}, {"member" : "com.jafpl.steps.PortSpecification#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/PortSpecification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/PortSpecification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/PortSpecification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/PortSpecification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/PortSpecification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/PortSpecification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/PortSpecification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/PortSpecification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/PortSpecification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/PortSpecification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/PortSpecification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/PortSpecification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/PortSpecification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/PortSpecification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "RESULTSEQ", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.RESULTSEQ", "link" : "com\/jafpl\/steps\/PortSpecification$.html#RESULTSEQ:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "SOURCESEQ", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.SOURCESEQ", "link" : "com\/jafpl\/steps\/PortSpecification$.html#SOURCESEQ:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "RESULT", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.RESULT", "link" : "com\/jafpl\/steps\/PortSpecification$.html#RESULT:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "SOURCE", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.SOURCE", "link" : "com\/jafpl\/steps\/PortSpecification$.html#SOURCE:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "NONE", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.NONE", "link" : "com\/jafpl\/steps\/PortSpecification$.html#NONE:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "ANY", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.ANY", "link" : "com\/jafpl\/steps\/PortSpecification$.html#ANY:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/PortSpecification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/PortSpecification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/PortSpecification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/PortSpecification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/PortSpecification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/PortSpecification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/PortSpecification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/PortSpecification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/PortSpecification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/PortSpecification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/PortSpecification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/PortSpecification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/PortSpecification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/PortSpecification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/steps\/PortSpecification.html", "kind" : "object"}, {"name" : "com.jafpl.steps.Step", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/Step.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/Step.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/Step.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/Step.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/Step.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/Step.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/Step.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/Step.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/Step.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/Step.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/Step.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/Step.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/Step.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/Step.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/Step.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/Step.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.stop", "link" : "com\/jafpl\/steps\/Step.html#stop():Unit", "kind" : "abstract def"}, {"label" : "abort", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.abort", "link" : "com\/jafpl\/steps\/Step.html#abort():Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.reset", "link" : "com\/jafpl\/steps\/Step.html#reset():Unit", "kind" : "abstract def"}, {"label" : "run", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.run", "link" : "com\/jafpl\/steps\/Step.html#run():Unit", "kind" : "abstract def"}, {"label" : "initialize", "tail" : "(config: RuntimeConfiguration): Unit", "member" : "com.jafpl.steps.Step.initialize", "link" : "com\/jafpl\/steps\/Step.html#initialize(config:com.jafpl.runtime.RuntimeConfiguration):Unit", "kind" : "abstract def"}, {"label" : "receiveBinding", "tail" : "(variable: String, value: Any): Unit", "member" : "com.jafpl.steps.Step.receiveBinding", "link" : "com\/jafpl\/steps\/Step.html#receiveBinding(variable:String,value:Any):Unit", "kind" : "abstract def"}, {"label" : "setConsumer", "tail" : "(consumer: DataConsumer): Unit", "member" : "com.jafpl.steps.Step.setConsumer", "link" : "com\/jafpl\/steps\/Step.html#setConsumer(consumer:com.jafpl.steps.DataConsumer):Unit", "kind" : "abstract def"}, {"label" : "bindingSpec", "tail" : "(): BindingSpecification", "member" : "com.jafpl.steps.Step.bindingSpec", "link" : "com\/jafpl\/steps\/Step.html#bindingSpec:com.jafpl.steps.BindingSpecification", "kind" : "abstract def"}, {"label" : "outputSpec", "tail" : "(): PortSpecification", "member" : "com.jafpl.steps.Step.outputSpec", "link" : "com\/jafpl\/steps\/Step.html#outputSpec:com.jafpl.steps.PortSpecification", "kind" : "abstract def"}, {"label" : "inputSpec", "tail" : "(): PortSpecification", "member" : "com.jafpl.steps.Step.inputSpec", "link" : "com\/jafpl\/steps\/Step.html#inputSpec:com.jafpl.steps.PortSpecification", "kind" : "abstract def"}, {"label" : "receive", "tail" : "(port: String, item: Any, metadata: Metadata): Unit", "member" : "com.jafpl.steps.DataConsumer.receive", "link" : "com\/jafpl\/steps\/Step.html#receive(port:String,item:Any,metadata:com.jafpl.messages.Metadata):Unit", "kind" : "abstract def"}], "shortDescription" : "An atomic pipeline step.", "trait" : "com\/jafpl\/steps\/Step.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.ViewportComposer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/ViewportComposer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/ViewportComposer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/ViewportComposer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/ViewportComposer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/ViewportComposer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/ViewportComposer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/ViewportComposer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/ViewportComposer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/ViewportComposer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/ViewportComposer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/ViewportComposer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/ViewportComposer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/ViewportComposer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/ViewportComposer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/ViewportComposer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/ViewportComposer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "recompose", "tail" : "(): ItemMessage", "member" : "com.jafpl.steps.ViewportComposer.recompose", "link" : "com\/jafpl\/steps\/ViewportComposer.html#recompose():com.jafpl.messages.ItemMessage", "kind" : "abstract def"}, {"label" : "decompose", "tail" : "(item: Any, metadata: Metadata): List[ViewportItem]", "member" : "com.jafpl.steps.ViewportComposer.decompose", "link" : "com\/jafpl\/steps\/ViewportComposer.html#decompose(item:Any,metadata:com.jafpl.messages.Metadata):List[com.jafpl.steps.ViewportItem]", "kind" : "abstract def"}], "shortDescription" : "Decompose and recompose data for viewport processing.", "trait" : "com\/jafpl\/steps\/ViewportComposer.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.ViewportItem", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/ViewportItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/ViewportItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/ViewportItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/ViewportItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/ViewportItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/ViewportItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/ViewportItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/ViewportItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/ViewportItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/ViewportItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/ViewportItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/ViewportItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/ViewportItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/ViewportItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/ViewportItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/ViewportItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "putItems", "tail" : "(items: List[Any]): Unit", "member" : "com.jafpl.steps.ViewportItem.putItems", "link" : "com\/jafpl\/steps\/ViewportItem.html#putItems(items:List[Any]):Unit", "kind" : "abstract def"}, {"label" : "getMetadata", "tail" : "(): Metadata", "member" : "com.jafpl.steps.ViewportItem.getMetadata", "link" : "com\/jafpl\/steps\/ViewportItem.html#getMetadata:com.jafpl.messages.Metadata", "kind" : "abstract def"}, {"label" : "getItem", "tail" : "(): Any", "member" : "com.jafpl.steps.ViewportItem.getItem", "link" : "com\/jafpl\/steps\/ViewportItem.html#getItem:Any", "kind" : "abstract def"}], "shortDescription" : "A representation of a sub-portion of a resource for viewport processing.", "trait" : "com\/jafpl\/steps\/ViewportItem.html", "kind" : "trait"}], "com.jafpl.util" : [{"name" : "com.jafpl.util.DefaultErrorListener", "shortDescription" : "", "members_class" : [{"label" : "info", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.info", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#info(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.warning", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#warning(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.warning", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#warning(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.error", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#error(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.error", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#error(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"member" : "com.jafpl.util.DefaultErrorListener#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/DefaultErrorListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/util\/DefaultErrorListener.html", "kind" : "class"}, {"name" : "com.jafpl.util.ErrorListener", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ErrorListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ErrorListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ErrorListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ErrorListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ErrorListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ErrorListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ErrorListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ErrorListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ErrorListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ErrorListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ErrorListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ErrorListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ErrorListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ErrorListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ErrorListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ErrorListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "info", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.info", "link" : "com\/jafpl\/util\/ErrorListener.html#info(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "warning", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.warning", "link" : "com\/jafpl\/util\/ErrorListener.html#warning(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "warning", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.warning", "link" : "com\/jafpl\/util\/ErrorListener.html#warning(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "error", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.error", "link" : "com\/jafpl\/util\/ErrorListener.html#error(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "error", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.error", "link" : "com\/jafpl\/util\/ErrorListener.html#error(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ErrorListener.html", "kind" : "trait"}, {"name" : "com.jafpl.util.ItemComparator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ItemComparator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ItemComparator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ItemComparator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ItemComparator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ItemComparator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ItemComparator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ItemComparator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ItemComparator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ItemComparator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ItemComparator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ItemComparator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ItemComparator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ItemComparator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ItemComparator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ItemComparator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ItemComparator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "areTheSame", "tail" : "(a: Any, b: Any): Boolean", "member" : "com.jafpl.util.ItemComparator.areTheSame", "link" : "com\/jafpl\/util\/ItemComparator.html#areTheSame(a:Any,b:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ItemComparator.html", "kind" : "trait"}, {"name" : "com.jafpl.util.ItemTester", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ItemTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ItemTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ItemTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ItemTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ItemTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ItemTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ItemTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ItemTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ItemTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ItemTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ItemTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ItemTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ItemTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ItemTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ItemTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ItemTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "test", "tail" : "(item: List[Any], bindings: Map[String, Any]): Boolean", "member" : "com.jafpl.util.ItemTester.test", "link" : "com\/jafpl\/util\/ItemTester.html#test(item:List[Any],bindings:Map[String,Any]):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ItemTester.html", "kind" : "trait"}, {"name" : "com.jafpl.util.PipelineMessage", "shortDescription" : "", "members_class" : [{"member" : "com.jafpl.util.PipelineMessage#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Metadata", "member" : "com.jafpl.util.PipelineMessage.metadata", "link" : "com\/jafpl\/util\/PipelineMessage.html#metadata:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "item", "tail" : ": Any", "member" : "com.jafpl.util.PipelineMessage.item", "link" : "com\/jafpl\/util\/PipelineMessage.html#item:Any", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/PipelineMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/PipelineMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/PipelineMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/PipelineMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/PipelineMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/PipelineMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/PipelineMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/PipelineMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/PipelineMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/PipelineMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/PipelineMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/PipelineMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/PipelineMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/PipelineMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/PipelineMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/PipelineMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/PipelineMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/PipelineMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/PipelineMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/util\/PipelineMessage.html", "kind" : "class"}], "com.jafpl.runtime" : [{"name" : "com.jafpl.runtime.BindingProxy", "shortDescription" : "", "members_class" : [{"label" : "set", "tail" : "(item: Any): Unit", "member" : "com.jafpl.runtime.BindingProxy.set", "link" : "com\/jafpl\/runtime\/BindingProxy.html#set(item:Any):Unit", "kind" : "def"}, {"label" : "closed", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.BindingProxy.closed", "link" : "com\/jafpl\/runtime\/BindingProxy.html#closed:Boolean", "kind" : "def"}, {"label" : "value", "tail" : "(): Option[Any]", "member" : "com.jafpl.runtime.BindingProxy.value", "link" : "com\/jafpl\/runtime\/BindingProxy.html#value:Option[Any]", "kind" : "def"}, {"label" : "_value", "tail" : ": Option[Any]", "member" : "com.jafpl.runtime.BindingProxy._value", "link" : "com\/jafpl\/runtime\/BindingProxy.html#_value:Option[Any]", "kind" : "var"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "com.jafpl.runtime.BindingProxy._closed", "link" : "com\/jafpl\/runtime\/BindingProxy.html#_closed:Boolean", "kind" : "var"}, {"member" : "com.jafpl.runtime.BindingProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/BindingProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/BindingProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/BindingProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/BindingProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/BindingProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/BindingProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/BindingProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/BindingProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/BindingProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/BindingProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/BindingProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/BindingProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/BindingProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/BindingProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/BindingProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/BindingProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/BindingProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/BindingProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/BindingProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/BindingProxy.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.ExpressionEvaluator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "booleanValue", "tail" : "(expr: Any, context: List[Any], bindings: Map[String, Any]): Boolean", "member" : "com.jafpl.runtime.ExpressionEvaluator.booleanValue", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#booleanValue(expr:Any,context:List[Any],bindings:Map[String,Any]):Boolean", "kind" : "abstract def"}, {"label" : "value", "tail" : "(expr: Any, context: List[Any], bindings: Map[String, Any]): Any", "member" : "com.jafpl.runtime.ExpressionEvaluator.value", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#value(expr:Any,context:List[Any],bindings:Map[String,Any]):Any", "kind" : "abstract def"}], "shortDescription" : "Evaluate expressions (for variable bindings and the alternatives in a choose).", "trait" : "com\/jafpl\/runtime\/ExpressionEvaluator.html", "kind" : "trait"}, {"name" : "com.jafpl.runtime.GraphRuntime", "shortDescription" : "Execute a pipeline.", "members_class" : [{"label" : "waitForPipeline", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.waitForPipeline", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#waitForPipeline():Unit", "kind" : "def"}, {"label" : "runInBackground", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.runInBackground", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#runInBackground():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.run", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#run():Unit", "kind" : "def"}, {"label" : "finish", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.runtime.GraphRuntime.finish", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finish(cause:Throwable):Unit", "kind" : "def"}, {"label" : "finish", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.finish", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finish():Unit", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Map[String, DataConsumerProxy]", "member" : "com.jafpl.runtime.GraphRuntime.outputs", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#outputs:Map[String,com.jafpl.steps.DataConsumerProxy]", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Map[String, BindingProvider]", "member" : "com.jafpl.runtime.GraphRuntime.bindings", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#bindings:Map[String,com.jafpl.steps.BindingProvider]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Map[String, DataConsumer]", "member" : "com.jafpl.runtime.GraphRuntime.inputs", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#inputs:Map[String,com.jafpl.steps.DataConsumer]", "kind" : "def"}, {"label" : "exception", "tail" : "(): Option[Throwable]", "member" : "com.jafpl.runtime.GraphRuntime.exception", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#exception:Option[Throwable]", "kind" : "def"}, {"label" : "finished", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.GraphRuntime.finished", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finished:Boolean", "kind" : "def"}, {"label" : "started", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.GraphRuntime.started", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#started:Boolean", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.runtime.GraphRuntime.logger", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.runtime.GraphRuntime#<init>", "error" : "unsupported entity"}, {"label" : "runtime", "tail" : ": RuntimeConfiguration", "member" : "com.jafpl.runtime.GraphRuntime.runtime", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#runtime:com.jafpl.runtime.RuntimeConfiguration", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.runtime.GraphRuntime.graph", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/GraphRuntime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/GraphRuntime.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.InputProxy", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.runtime.InputProxy.close", "link" : "com\/jafpl\/runtime\/InputProxy.html#close():Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(port: String, item: Any, metadata: Metadata): Unit", "member" : "com.jafpl.runtime.InputProxy.receive", "link" : "com\/jafpl\/runtime\/InputProxy.html#receive(port:String,item:Any,metadata:com.jafpl.messages.Metadata):Unit", "kind" : "def"}, {"label" : "closed", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.InputProxy.closed", "link" : "com\/jafpl\/runtime\/InputProxy.html#closed:Boolean", "kind" : "def"}, {"label" : "_items", "tail" : ": ListBuffer[Message]", "member" : "com.jafpl.runtime.InputProxy._items", "link" : "com\/jafpl\/runtime\/InputProxy.html#_items:scala.collection.mutable.ListBuffer[com.jafpl.messages.Message]", "kind" : "val"}, {"label" : "_closed", "tail" : ": Boolean", "member" : "com.jafpl.runtime.InputProxy._closed", "link" : "com\/jafpl\/runtime\/InputProxy.html#_closed:Boolean", "kind" : "var"}, {"member" : "com.jafpl.runtime.InputProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/InputProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/InputProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/InputProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/InputProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/InputProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/InputProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/InputProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/InputProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/InputProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/InputProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/InputProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/InputProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/InputProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/InputProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/InputProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/InputProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/InputProxy.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.OutputProxy", "shortDescription" : "", "members_class" : [{"label" : "receive", "tail" : "(port: String, item: Any, metadata: Metadata): Unit", "member" : "com.jafpl.runtime.OutputProxy.receive", "link" : "com\/jafpl\/runtime\/OutputProxy.html#receive(port:String,item:Any,metadata:com.jafpl.messages.Metadata):Unit", "kind" : "def"}, {"label" : "setConsumer", "tail" : "(provider: DataConsumer): Unit", "member" : "com.jafpl.runtime.OutputProxy.setConsumer", "link" : "com\/jafpl\/runtime\/OutputProxy.html#setConsumer(provider:com.jafpl.steps.DataConsumer):Unit", "kind" : "def"}, {"label" : "provider", "tail" : "(): Option[DataConsumer]", "member" : "com.jafpl.runtime.OutputProxy.provider", "link" : "com\/jafpl\/runtime\/OutputProxy.html#provider:Option[com.jafpl.steps.DataConsumer]", "kind" : "def"}, {"member" : "com.jafpl.runtime.OutputProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/OutputProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/OutputProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/OutputProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/OutputProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/OutputProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/OutputProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/OutputProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/OutputProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/OutputProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/OutputProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/OutputProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/OutputProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/OutputProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/OutputProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/OutputProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/OutputProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/OutputProxy.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.RuntimeConfiguration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deliver", "tail" : "(message: ItemMessage, consumer: DataConsumer, port: String): Unit", "member" : "com.jafpl.runtime.RuntimeConfiguration.deliver", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#deliver(message:com.jafpl.messages.ItemMessage,consumer:com.jafpl.steps.DataConsumer,port:String):Unit", "kind" : "abstract def"}, {"label" : "watchdogTimeout", "tail" : "(): Long", "member" : "com.jafpl.runtime.RuntimeConfiguration.watchdogTimeout", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#watchdogTimeout:Long", "kind" : "abstract def"}, {"label" : "traceEnabled", "tail" : "(trace: String): Boolean", "member" : "com.jafpl.runtime.RuntimeConfiguration.traceEnabled", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#traceEnabled(trace:String):Boolean", "kind" : "abstract def"}, {"label" : "expressionEvaluator", "tail" : "(): ExpressionEvaluator", "member" : "com.jafpl.runtime.RuntimeConfiguration.expressionEvaluator", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#expressionEvaluator:com.jafpl.runtime.ExpressionEvaluator", "kind" : "abstract def"}], "shortDescription" : "The runtime configuration for pipeline execution.", "trait" : "com\/jafpl\/runtime\/RuntimeConfiguration.html", "kind" : "trait"}], "com.jafpl.exceptions" : [{"name" : "com.jafpl.exceptions.GraphException", "shortDescription" : "An exception raised by an illegal graph.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.exceptions.GraphException.toString", "link" : "com\/jafpl\/exceptions\/GraphException.html#toString():String", "kind" : "def"}, {"member" : "com.jafpl.exceptions.GraphException#<init>", "error" : "unsupported entity"}, {"label" : "location", "tail" : ": Option[Location]", "member" : "com.jafpl.exceptions.GraphException.location", "link" : "com\/jafpl\/exceptions\/GraphException.html#location:Option[com.jafpl.graph.Location]", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "com.jafpl.exceptions.GraphException.msg", "link" : "com\/jafpl\/exceptions\/GraphException.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/jafpl\/exceptions\/GraphException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/jafpl\/exceptions\/GraphException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/GraphException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/jafpl\/exceptions\/GraphException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/jafpl\/exceptions\/GraphException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/jafpl\/exceptions\/GraphException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/jafpl\/exceptions\/GraphException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/GraphException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/GraphException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/GraphException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/GraphException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/GraphException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/GraphException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/GraphException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/GraphException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/GraphException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/GraphException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/GraphException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/GraphException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/GraphException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/GraphException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/GraphException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/GraphException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/GraphException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/GraphException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/exceptions\/GraphException.html", "kind" : "class"}, {"name" : "com.jafpl.exceptions.PipelineException", "shortDescription" : "An exception raised during pipeline evaluation.", "members_class" : [{"member" : "com.jafpl.exceptions.PipelineException#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.exceptions.PipelineException#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.exceptions.PipelineException#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.exceptions.PipelineException.toString", "link" : "com\/jafpl\/exceptions\/PipelineException.html#toString():String", "kind" : "def"}, {"member" : "com.jafpl.exceptions.PipelineException#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": Option[Any]", "member" : "com.jafpl.exceptions.PipelineException.data", "link" : "com\/jafpl\/exceptions\/PipelineException.html#data:Option[Any]", "kind" : "val"}, {"label" : "cause", "tail" : ": Option[Throwable]", "member" : "com.jafpl.exceptions.PipelineException.cause", "link" : "com\/jafpl\/exceptions\/PipelineException.html#cause:Option[Throwable]", "kind" : "val"}, {"label" : "location", "tail" : ": Option[Location]", "member" : "com.jafpl.exceptions.PipelineException.location", "link" : "com\/jafpl\/exceptions\/PipelineException.html#location:Option[com.jafpl.graph.Location]", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.jafpl.exceptions.PipelineException.message", "link" : "com\/jafpl\/exceptions\/PipelineException.html#message:String", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "com.jafpl.exceptions.PipelineException.code", "link" : "com\/jafpl\/exceptions\/PipelineException.html#code:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/jafpl\/exceptions\/PipelineException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/PipelineException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/jafpl\/exceptions\/PipelineException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/PipelineException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/PipelineException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/PipelineException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/PipelineException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/PipelineException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/PipelineException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/PipelineException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/PipelineException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/PipelineException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/PipelineException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/PipelineException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/PipelineException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/PipelineException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/PipelineException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/PipelineException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/PipelineException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/PipelineException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/PipelineException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/exceptions\/PipelineException.html", "kind" : "class"}, {"name" : "com.jafpl.exceptions.StepException", "shortDescription" : "An exception raised during step evaluation.", "members_class" : [{"member" : "com.jafpl.exceptions.StepException#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.exceptions.StepException#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.exceptions.StepException.toString", "link" : "com\/jafpl\/exceptions\/StepException.html#toString():String", "kind" : "def"}, {"member" : "com.jafpl.exceptions.StepException#<init>", "error" : "unsupported entity"}, {"label" : "data", "tail" : ": Option[Any]", "member" : "com.jafpl.exceptions.StepException.data", "link" : "com\/jafpl\/exceptions\/StepException.html#data:Option[Any]", "kind" : "val"}, {"label" : "cause", "tail" : ": Option[Throwable]", "member" : "com.jafpl.exceptions.StepException.cause", "link" : "com\/jafpl\/exceptions\/StepException.html#cause:Option[Throwable]", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.jafpl.exceptions.StepException.message", "link" : "com\/jafpl\/exceptions\/StepException.html#message:String", "kind" : "val"}, {"label" : "code", "tail" : ": String", "member" : "com.jafpl.exceptions.StepException.code", "link" : "com\/jafpl\/exceptions\/StepException.html#code:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/jafpl\/exceptions\/StepException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/jafpl\/exceptions\/StepException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/StepException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/jafpl\/exceptions\/StepException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/jafpl\/exceptions\/StepException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/jafpl\/exceptions\/StepException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/jafpl\/exceptions\/StepException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/StepException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/StepException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/StepException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/StepException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/StepException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/StepException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/StepException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/StepException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/StepException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/StepException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/StepException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/StepException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/StepException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/StepException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/StepException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/StepException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/StepException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/StepException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/exceptions\/StepException.html", "kind" : "class"}], "com.jafpl.graph" : [{"name" : "com.jafpl.graph.AtomicNode", "shortDescription" : "An atomic node.", "members_class" : [{"member" : "com.jafpl.graph.AtomicNode#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.AtomicNode.userLabel", "link" : "com\/jafpl\/graph\/AtomicNode.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.AtomicNode.step", "link" : "com\/jafpl\/graph\/AtomicNode.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.AtomicNode.graph", "link" : "com\/jafpl\/graph\/AtomicNode.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/AtomicNode.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/AtomicNode.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/AtomicNode.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/AtomicNode.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/AtomicNode.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/AtomicNode.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/AtomicNode.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/AtomicNode.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/AtomicNode.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/AtomicNode.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/AtomicNode.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/AtomicNode.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/AtomicNode.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/AtomicNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/AtomicNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/AtomicNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/AtomicNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/AtomicNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/AtomicNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/AtomicNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/AtomicNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/AtomicNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/AtomicNode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/AtomicNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/AtomicNode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/AtomicNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/AtomicNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/AtomicNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/AtomicNode.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Binding", "shortDescription" : "A variable binding.", "members_class" : [{"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Binding.outputs", "link" : "com\/jafpl\/graph\/Binding.html#outputs:Set[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.toString", "link" : "com\/jafpl\/graph\/Binding.html#toString():String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.label", "link" : "com\/jafpl\/graph\/Binding.html#label:String", "kind" : "def"}, {"member" : "com.jafpl.graph.Binding#<init>", "error" : "unsupported entity"}, {"label" : "expression", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.Binding.expression", "link" : "com\/jafpl\/graph\/Binding.html#expression:Option[Any]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.jafpl.graph.Binding.name", "link" : "com\/jafpl\/graph\/Binding.html#name:String", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.Binding.graph", "link" : "com\/jafpl\/graph\/Binding.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/Binding.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/Binding.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/Binding.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/Binding.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/Binding.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/Binding.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/Binding.html#bindings:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/Binding.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/Binding.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/Binding.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/Binding.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/Binding.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/Binding.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.Node.userLabel", "link" : "com\/jafpl\/graph\/Binding.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/Binding.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Binding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Binding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Binding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Binding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Binding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Binding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Binding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Binding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Binding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Binding.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Binding.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Binding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Binding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Binding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Binding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Binding.html", "kind" : "class"}, {"name" : "com.jafpl.graph.CatchStart", "shortDescription" : "The catch block of a try catch.", "members_class" : [{"label" : "codes", "tail" : ": List[String]", "member" : "com.jafpl.graph.CatchStart.codes", "link" : "com\/jafpl\/graph\/CatchStart.html#codes:List[String]", "kind" : "val"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.CatchStart.userLabel", "link" : "com\/jafpl\/graph\/CatchStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.CatchStart.end", "link" : "com\/jafpl\/graph\/CatchStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.CatchStart.graph", "link" : "com\/jafpl\/graph\/CatchStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/CatchStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/CatchStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/CatchStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/CatchStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/CatchStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/CatchStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/CatchStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/CatchStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/CatchStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/CatchStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/CatchStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/CatchStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/CatchStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/CatchStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/CatchStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/CatchStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/CatchStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/CatchStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/CatchStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/CatchStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/CatchStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/CatchStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/CatchStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/CatchStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/CatchStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/CatchStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/CatchStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/CatchStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/CatchStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/CatchStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/CatchStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/CatchStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/CatchStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/CatchStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/CatchStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/CatchStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/CatchStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.ChooseStart", "shortDescription" : "A choose container.", "members_class" : [{"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ChooseStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ChooseStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ChooseStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ChooseStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ChooseStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ChooseStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: String, label: Option[String]): WhenStart", "member" : "com.jafpl.graph.ChooseStart.addWhen", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhen(expression:String,label:Option[String]):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: String, label: String): WhenStart", "member" : "com.jafpl.graph.ChooseStart.addWhen", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhen(expression:String,label:String):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.ChooseStart.userLabel", "link" : "com\/jafpl\/graph\/ChooseStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.ChooseStart.end", "link" : "com\/jafpl\/graph\/ChooseStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.ChooseStart.graph", "link" : "com\/jafpl\/graph\/ChooseStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/ChooseStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/ChooseStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/ChooseStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/ChooseStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/ChooseStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/ChooseStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/ChooseStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/ChooseStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/ChooseStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/ChooseStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/ChooseStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/ChooseStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/ChooseStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/ChooseStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/ChooseStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/ChooseStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/ChooseStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/ChooseStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/ChooseStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/ChooseStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/ChooseStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/ChooseStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/ChooseStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/ChooseStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/ChooseStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/ChooseStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/ChooseStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/ChooseStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/ChooseStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/ChooseStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/ChooseStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/ChooseStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/ChooseStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/ChooseStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/ChooseStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.ContainerStart", "shortDescription" : "A node that contains other nodes.", "members_class" : [{"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/ContainerStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/ContainerStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/ContainerStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/ContainerStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/ContainerStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/ContainerStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"member" : "com.jafpl.graph.ContainerStart#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.ContainerStart.userLabel", "link" : "com\/jafpl\/graph\/ContainerStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.end", "link" : "com\/jafpl\/graph\/ContainerStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.ContainerStart.graph", "link" : "com\/jafpl\/graph\/ContainerStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/ContainerStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/ContainerStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/ContainerStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/ContainerStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/ContainerStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/ContainerStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/ContainerStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/ContainerStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/ContainerStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/ContainerStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/ContainerStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/ContainerStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/ContainerStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/ContainerStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/ContainerStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/ContainerStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/ContainerStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/ContainerStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/ContainerStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/ContainerStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/ContainerStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/ContainerStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/ContainerStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/ContainerStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/ContainerStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/ContainerStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/ContainerStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/ContainerStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/ContainerStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Graph", "shortDescription" : "A pipeline graph.", "members_class" : [{"label" : "asXML", "tail" : "(): Elem", "member" : "com.jafpl.graph.Graph.asXML", "link" : "com\/jafpl\/graph\/Graph.html#asXML:scala.xml.Elem", "kind" : "def"}, {"label" : "dump", "tail" : "(): Unit", "member" : "com.jafpl.graph.Graph.dump", "link" : "com\/jafpl\/graph\/Graph.html#dump():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.graph.Graph.close", "link" : "com\/jafpl\/graph\/Graph.html#close():Unit", "kind" : "def"}, {"label" : "edgesTo", "tail" : "(node: Node, port: String): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesTo", "link" : "com\/jafpl\/graph\/Graph.html#edgesTo(node:com.jafpl.graph.Node,port:String):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "hasEdgeFrom", "tail" : "(node: Node, port: String): Boolean", "member" : "com.jafpl.graph.Graph.hasEdgeFrom", "link" : "com\/jafpl\/graph\/Graph.html#hasEdgeFrom(node:com.jafpl.graph.Node,port:String):Boolean", "kind" : "def"}, {"label" : "edgesFrom", "tail" : "(node: Node, port: String): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesFrom", "link" : "com\/jafpl\/graph\/Graph.html#edgesFrom(node:com.jafpl.graph.Node,port:String):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "edgesFrom", "tail" : "(node: Node): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesFrom", "link" : "com\/jafpl\/graph\/Graph.html#edgesFrom(node:com.jafpl.graph.Node):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "edges", "tail" : "(): List[Edge]", "member" : "com.jafpl.graph.Graph.edges", "link" : "com\/jafpl\/graph\/Graph.html#edges:List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "bindings", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.bindings", "link" : "com\/jafpl\/graph\/Graph.html#bindings(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "outboundPorts", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.outboundPorts", "link" : "com\/jafpl\/graph\/Graph.html#outboundPorts(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "inboundPorts", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.inboundPorts", "link" : "com\/jafpl\/graph\/Graph.html#inboundPorts(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "addDependsEdge", "tail" : "(from: Node, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addDependsEdge", "link" : "com\/jafpl\/graph\/Graph.html#addDependsEdge(from:com.jafpl.graph.Node,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addBindingEdge", "tail" : "(from: Binding, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addBindingEdge", "link" : "com\/jafpl\/graph\/Graph.html#addBindingEdge(from:com.jafpl.graph.Binding,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addBindingEdge", "tail" : "(varname: String, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addBindingEdge", "link" : "com\/jafpl\/graph\/Graph.html#addBindingEdge(varname:String,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addEdge", "tail" : "(from: Node, fromName: String, to: Node, toName: String): Unit", "member" : "com.jafpl.graph.Graph.addEdge", "link" : "com\/jafpl\/graph\/Graph.html#addEdge(from:com.jafpl.graph.Node,fromName:String,to:com.jafpl.graph.Node,toName:String):Unit", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.Graph.addVariable", "link" : "com\/jafpl\/graph\/Graph.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.Graph.addSink", "link" : "com\/jafpl\/graph\/Graph.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.Graph.addJoiner", "link" : "com\/jafpl\/graph\/Graph.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.Graph.addSplitter", "link" : "com\/jafpl\/graph\/Graph.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: Option[String], codes: List[String]): CatchStart", "member" : "com.jafpl.graph.Graph.addCatch", "link" : "com\/jafpl\/graph\/Graph.html#addCatch(label:Option[String],codes:List[String]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: Option[String]): TryStart", "member" : "com.jafpl.graph.Graph.addTry", "link" : "com\/jafpl\/graph\/Graph.html#addTry(label:Option[String]):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.Graph.addTryCatch", "link" : "com\/jafpl\/graph\/Graph.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.Graph.addViewport", "link" : "com\/jafpl\/graph\/Graph.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.Graph.addUntil", "link" : "com\/jafpl\/graph\/Graph.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.Graph.addWhile", "link" : "com\/jafpl\/graph\/Graph.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.Graph.addForEach", "link" : "com\/jafpl\/graph\/Graph.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: String, label: Option[String]): WhenStart", "member" : "com.jafpl.graph.Graph.addWhen", "link" : "com\/jafpl\/graph\/Graph.html#addWhen(expression:String,label:Option[String]):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.Graph.addChoose", "link" : "com\/jafpl\/graph\/Graph.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.Graph.addGroup", "link" : "com\/jafpl\/graph\/Graph.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.Graph.addAtomic", "link" : "com\/jafpl\/graph\/Graph.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addBinding", "tail" : "(name: String): Binding", "member" : "com.jafpl.graph.Graph.addBinding", "link" : "com\/jafpl\/graph\/Graph.html#addBinding(name:String):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOutput", "tail" : "(node: Node, port: String): Unit", "member" : "com.jafpl.graph.Graph.addOutput", "link" : "com\/jafpl\/graph\/Graph.html#addOutput(node:com.jafpl.graph.Node,port:String):Unit", "kind" : "def"}, {"label" : "addInput", "tail" : "(node: Node, port: String): Unit", "member" : "com.jafpl.graph.Graph.addInput", "link" : "com\/jafpl\/graph\/Graph.html#addInput(node:com.jafpl.graph.Node,port:String):Unit", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(label: Option[String]): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline(label:Option[String]):com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(label: String): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline(label:String):com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline():com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "valid", "tail" : "(): Boolean", "member" : "com.jafpl.graph.Graph.valid", "link" : "com\/jafpl\/graph\/Graph.html#valid:Boolean", "kind" : "def"}, {"label" : "nodes", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.Graph.nodes", "link" : "com\/jafpl\/graph\/Graph.html#nodes:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "error", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.graph.Graph.error", "link" : "com\/jafpl\/graph\/Graph.html#error(cause:Throwable):Unit", "kind" : "def"}, {"member" : "com.jafpl.graph.Graph#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.Graph#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Graph.logger", "link" : "com\/jafpl\/graph\/Graph.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.graph.Graph#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/Graph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Graph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Graph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Graph.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Location", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Location.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Location.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Location.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Location.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Location.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Location.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Location.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Location.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Location.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/Location.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Location.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Location.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Location.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Location.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Location.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Location.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "column", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.Location.column", "link" : "com\/jafpl\/graph\/Location.html#column:Option[Long]", "kind" : "abstract def"}, {"label" : "line", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.Location.line", "link" : "com\/jafpl\/graph\/Location.html#line:Option[Long]", "kind" : "abstract def"}, {"label" : "uri", "tail" : "(): Option[String]", "member" : "com.jafpl.graph.Location.uri", "link" : "com\/jafpl\/graph\/Location.html#uri:Option[String]", "kind" : "abstract def"}], "shortDescription" : "A location.", "trait" : "com\/jafpl\/graph\/Location.html", "kind" : "trait"}, {"name" : "com.jafpl.graph.LoopEachStart", "shortDescription" : "A for-each container.", "members_class" : [{"label" : "inputsOk", "tail" : "(): Boolean", "member" : "com.jafpl.graph.LoopEachStart.inputsOk", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputsOk():Boolean", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.LoopEachStart.userLabel", "link" : "com\/jafpl\/graph\/LoopEachStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.LoopEachStart.end", "link" : "com\/jafpl\/graph\/LoopEachStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.LoopEachStart.graph", "link" : "com\/jafpl\/graph\/LoopEachStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/LoopEachStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/LoopEachStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/LoopEachStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/LoopEachStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/LoopEachStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/LoopEachStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/LoopEachStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/LoopEachStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/LoopEachStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/LoopEachStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/LoopEachStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/LoopEachStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/LoopEachStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/LoopEachStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/LoopEachStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/LoopEachStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/LoopEachStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/LoopEachStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/LoopEachStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/LoopEachStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/LoopEachStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/LoopEachStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/LoopEachStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/LoopEachStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/LoopEachStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/LoopEachStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/LoopEachStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/LoopEachStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.LoopStart", "shortDescription" : "A looping containre.", "members_class" : [{"member" : "com.jafpl.graph.LoopStart#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.LoopStart.userLabel", "link" : "com\/jafpl\/graph\/LoopStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.LoopStart.end", "link" : "com\/jafpl\/graph\/LoopStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.LoopStart.graph", "link" : "com\/jafpl\/graph\/LoopStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/LoopStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/LoopStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/LoopStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/LoopStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/LoopStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/LoopStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/LoopStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/LoopStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/LoopStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/LoopStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/LoopStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/LoopStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/LoopStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/LoopStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/LoopStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/LoopStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/LoopStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/LoopStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/LoopStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/LoopStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/LoopStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/LoopStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/LoopStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/LoopStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/LoopStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/LoopStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/LoopStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/LoopStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/LoopStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/LoopStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/LoopStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/LoopStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/LoopStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/LoopStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/LoopStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/LoopStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Node", "shortDescription" : "A node in the pipeline graph.", "members_class" : [{"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/Node.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/Node.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/Node.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/Node.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/Node.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/Node.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/Node.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/Node.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/Node.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/Node.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/Node.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/Node.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/Node.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/Node.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/Node.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/Node.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.graph.Node#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.Node.userLabel", "link" : "com\/jafpl\/graph\/Node.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/Node.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.Node.graph", "link" : "com\/jafpl\/graph\/Node.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Node.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Node.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Node.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Node.html", "kind" : "class"}, {"name" : "com.jafpl.graph.NodeLocation", "shortDescription" : "", "object" : "com\/jafpl\/graph\/NodeLocation$.html", "members_class" : [{"label" : "column", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.NodeLocation.column", "link" : "com\/jafpl\/graph\/NodeLocation.html#column:Option[Long]", "kind" : "def"}, {"label" : "line", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.NodeLocation.line", "link" : "com\/jafpl\/graph\/NodeLocation.html#line:Option[Long]", "kind" : "def"}, {"label" : "uri", "tail" : "(): Option[String]", "member" : "com.jafpl.graph.NodeLocation.uri", "link" : "com\/jafpl\/graph\/NodeLocation.html#uri:Option[String]", "kind" : "def"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/NodeLocation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/NodeLocation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/NodeLocation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/NodeLocation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/NodeLocation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/NodeLocation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/NodeLocation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/NodeLocation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/NodeLocation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/NodeLocation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/NodeLocation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/NodeLocation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/NodeLocation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/NodeLocation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UNKNOWN", "tail" : ": NodeLocation", "member" : "com.jafpl.graph.NodeLocation.UNKNOWN", "link" : "com\/jafpl\/graph\/NodeLocation$.html#UNKNOWN:com.jafpl.graph.NodeLocation", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/NodeLocation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/NodeLocation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/NodeLocation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/NodeLocation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/NodeLocation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/NodeLocation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/NodeLocation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/NodeLocation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/NodeLocation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/NodeLocation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/NodeLocation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/NodeLocation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/NodeLocation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/NodeLocation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/NodeLocation.html", "kind" : "object"}, {"name" : "com.jafpl.graph.TryCatchStart", "shortDescription" : "", "members_class" : [{"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.TryCatchStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.TryCatchStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.TryCatchStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.TryCatchStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.TryCatchStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.TryCatchStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String, codes: List[String]): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String,codes:List[String]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String, code: String): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String,code:String):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: Option[String], codes: List[String]): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:Option[String],codes:List[String]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: Option[String]): TryStart", "member" : "com.jafpl.graph.TryCatchStart.addTry", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTry(label:Option[String]):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: String): TryStart", "member" : "com.jafpl.graph.TryCatchStart.addTry", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTry(label:String):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.TryCatchStart.userLabel", "link" : "com\/jafpl\/graph\/TryCatchStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.TryCatchStart.end", "link" : "com\/jafpl\/graph\/TryCatchStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.TryCatchStart.graph", "link" : "com\/jafpl\/graph\/TryCatchStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/TryCatchStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/TryCatchStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/TryCatchStart.html#toString():String", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/TryCatchStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/TryCatchStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/TryCatchStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/TryCatchStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/TryCatchStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/TryCatchStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/TryCatchStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/TryCatchStart.html#id:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/TryCatchStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/TryCatchStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/TryCatchStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/TryCatchStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/TryCatchStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/TryCatchStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/TryCatchStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/TryCatchStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/TryCatchStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/TryCatchStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/TryCatchStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/TryCatchStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/TryCatchStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/TryCatchStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/TryCatchStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/TryCatchStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/TryCatchStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/TryCatchStart.html", "kind" : "class"}], "com.jafpl" : [], "com" : [], "com.jafpl.messages" : [{"name" : "com.jafpl.messages.ItemMessage", "shortDescription" : "A item that flows between two ports.", "members_class" : [{"member" : "com.jafpl.messages.ItemMessage#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Metadata", "member" : "com.jafpl.messages.ItemMessage.metadata", "link" : "com\/jafpl\/messages\/ItemMessage.html#metadata:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "item", "tail" : ": Any", "member" : "com.jafpl.messages.ItemMessage.item", "link" : "com\/jafpl\/messages\/ItemMessage.html#item:Any", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/ItemMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/ItemMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/ItemMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/ItemMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/ItemMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/ItemMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/ItemMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/ItemMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/ItemMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/ItemMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/ItemMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/ItemMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/ItemMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/ItemMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/ItemMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/ItemMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/ItemMessage.html", "kind" : "class"}, {"name" : "com.jafpl.messages.Message", "shortDescription" : "", "members_class" : [{"member" : "com.jafpl.messages.Message#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Message.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/Message.html", "kind" : "class"}, {"name" : "com.jafpl.messages.Metadata", "shortDescription" : "", "object" : "com\/jafpl\/messages\/Metadata$.html", "members_class" : [{"member" : "com.jafpl.messages.Metadata#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Metadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Metadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Metadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Metadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Metadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Metadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Metadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Metadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Metadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Metadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Metadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Metadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Metadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Metadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Metadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Metadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "BOOLEAN", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.BOOLEAN", "link" : "com\/jafpl\/messages\/Metadata$.html#BOOLEAN:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "NUMBER", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.NUMBER", "link" : "com\/jafpl\/messages\/Metadata$.html#NUMBER:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "STRING", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.STRING", "link" : "com\/jafpl\/messages\/Metadata$.html#STRING:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "BLANK", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.BLANK", "link" : "com\/jafpl\/messages\/Metadata$.html#BLANK:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Metadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Metadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Metadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Metadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Metadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Metadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Metadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Metadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Metadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Metadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Metadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Metadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Metadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Metadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Metadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Metadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/Metadata.html", "kind" : "object"}]};