Index.PACKAGES = {"com.jafpl.steps" : [{"name" : "com.jafpl.steps.BindingProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.steps.BindingProvider.close", "link" : "com\/jafpl\/steps\/BindingProvider.html#close():Unit", "kind" : "abstract def"}, {"label" : "set", "tail" : "(item: Any): Unit", "member" : "com.jafpl.steps.BindingProvider.set", "link" : "com\/jafpl\/steps\/BindingProvider.html#set(item:Any):Unit", "kind" : "abstract def"}], "shortDescription" : "A data provider.", "trait" : "com\/jafpl\/steps\/BindingProvider.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.BindingSpecification", "shortDescription" : "Useful default binding specifications.", "object" : "com\/jafpl\/steps\/BindingSpecification$.html", "members_class" : [{"member" : "com.jafpl.steps.BindingSpecification#<init>", "error" : "unsupported entity"}, {"label" : "bindings", "tail" : ": Set[String]", "member" : "com.jafpl.steps.BindingSpecification.bindings", "link" : "com\/jafpl\/steps\/BindingSpecification.html#bindings:Set[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingSpecification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingSpecification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingSpecification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingSpecification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingSpecification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingSpecification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingSpecification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingSpecification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingSpecification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingSpecification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingSpecification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingSpecification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingSpecification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingSpecification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ANY", "tail" : ": BindingSpecification", "member" : "com.jafpl.steps.BindingSpecification.ANY", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#ANY:com.jafpl.steps.BindingSpecification", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/BindingSpecification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/BindingSpecification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/steps\/BindingSpecification.html", "kind" : "object"}, {"name" : "com.jafpl.steps.DataConsumer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/DataConsumer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/DataConsumer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/DataConsumer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/DataConsumer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/DataConsumer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/DataConsumer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/DataConsumer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/DataConsumer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/DataConsumer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/DataConsumer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/DataConsumer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/DataConsumer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/DataConsumer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/DataConsumer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "receive", "tail" : "(port: String, message: Message): Unit", "member" : "com.jafpl.steps.DataConsumer.receive", "link" : "com\/jafpl\/steps\/DataConsumer.html#receive(port:String,message:com.jafpl.messages.Message):Unit", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): String", "member" : "com.jafpl.steps.DataConsumer.id", "link" : "com\/jafpl\/steps\/DataConsumer.html#id:String", "kind" : "abstract def"}], "shortDescription" : "Interface for sending outputs from atomic steps.", "trait" : "com\/jafpl\/steps\/DataConsumer.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.DataConsumerProxy", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setConsumer", "tail" : "(provider: DataConsumer): Unit", "member" : "com.jafpl.steps.DataConsumerProxy.setConsumer", "link" : "com\/jafpl\/steps\/DataConsumerProxy.html#setConsumer(provider:com.jafpl.steps.DataConsumer):Unit", "kind" : "abstract def"}], "shortDescription" : "A data consumer.", "trait" : "com\/jafpl\/steps\/DataConsumerProxy.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.DataProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/DataProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/DataProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/DataProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/DataProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/DataProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/DataProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/DataProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/DataProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/DataProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/DataProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/DataProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/DataProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/DataProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/DataProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/DataProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/DataProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/DataProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "send", "tail" : "(message: Message): Unit", "member" : "com.jafpl.steps.DataProvider.send", "link" : "com\/jafpl\/steps\/DataProvider.html#send(message:com.jafpl.messages.Message):Unit", "kind" : "abstract def"}], "shortDescription" : "Interface for sending external data to a pipeline.", "trait" : "com\/jafpl\/steps\/DataProvider.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.PortSpecification", "shortDescription" : "Useful default port binding specifications.", "object" : "com\/jafpl\/steps\/PortSpecification$.html", "members_class" : [{"label" : "checkCardinality", "tail" : "(port: String, count: Long): Unit", "member" : "com.jafpl.steps.PortSpecification.checkCardinality", "link" : "com\/jafpl\/steps\/PortSpecification.html#checkCardinality(port:String,count:Long):Unit", "kind" : "def"}, {"label" : "cardinality", "tail" : "(port: String): Option[String]", "member" : "com.jafpl.steps.PortSpecification.cardinality", "link" : "com\/jafpl\/steps\/PortSpecification.html#cardinality(port:String):Option[String]", "kind" : "def"}, {"label" : "ports", "tail" : "(): Set[String]", "member" : "com.jafpl.steps.PortSpecification.ports", "link" : "com\/jafpl\/steps\/PortSpecification.html#ports:Set[String]", "kind" : "def"}, {"member" : "com.jafpl.steps.PortSpecification#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/PortSpecification.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/PortSpecification.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/PortSpecification.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/PortSpecification.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/PortSpecification.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/PortSpecification.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/PortSpecification.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/PortSpecification.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/PortSpecification.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/PortSpecification.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/PortSpecification.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/PortSpecification.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/PortSpecification.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/PortSpecification.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "RESULTSEQ", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.RESULTSEQ", "link" : "com\/jafpl\/steps\/PortSpecification$.html#RESULTSEQ:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "SOURCESEQ", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.SOURCESEQ", "link" : "com\/jafpl\/steps\/PortSpecification$.html#SOURCESEQ:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "RESULT", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.RESULT", "link" : "com\/jafpl\/steps\/PortSpecification$.html#RESULT:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "SOURCE", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.SOURCE", "link" : "com\/jafpl\/steps\/PortSpecification$.html#SOURCE:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "NONE", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.NONE", "link" : "com\/jafpl\/steps\/PortSpecification$.html#NONE:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "ANY", "tail" : ": PortSpecification", "member" : "com.jafpl.steps.PortSpecification.ANY", "link" : "com\/jafpl\/steps\/PortSpecification$.html#ANY:com.jafpl.steps.PortSpecification", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/PortSpecification$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/PortSpecification$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/PortSpecification$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/PortSpecification$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/PortSpecification$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/PortSpecification$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/PortSpecification$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/PortSpecification$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/PortSpecification$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/PortSpecification$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/PortSpecification$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/PortSpecification$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/PortSpecification$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/PortSpecification$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/PortSpecification$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/PortSpecification$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/steps\/PortSpecification.html", "kind" : "object"}, {"name" : "com.jafpl.steps.Step", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/Step.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/Step.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/Step.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/Step.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/Step.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/Step.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/Step.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/Step.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/Step.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/Step.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/Step.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/Step.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/Step.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/Step.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/Step.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/Step.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/Step.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.stop", "link" : "com\/jafpl\/steps\/Step.html#stop():Unit", "kind" : "abstract def"}, {"label" : "abort", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.abort", "link" : "com\/jafpl\/steps\/Step.html#abort():Unit", "kind" : "abstract def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.reset", "link" : "com\/jafpl\/steps\/Step.html#reset():Unit", "kind" : "abstract def"}, {"label" : "run", "tail" : "(): Unit", "member" : "com.jafpl.steps.Step.run", "link" : "com\/jafpl\/steps\/Step.html#run():Unit", "kind" : "abstract def"}, {"label" : "initialize", "tail" : "(config: RuntimeConfiguration): Unit", "member" : "com.jafpl.steps.Step.initialize", "link" : "com\/jafpl\/steps\/Step.html#initialize(config:com.jafpl.runtime.RuntimeConfiguration):Unit", "kind" : "abstract def"}, {"label" : "receiveBinding", "tail" : "(message: BindingMessage): Unit", "member" : "com.jafpl.steps.Step.receiveBinding", "link" : "com\/jafpl\/steps\/Step.html#receiveBinding(message:com.jafpl.messages.BindingMessage):Unit", "kind" : "abstract def"}, {"label" : "setLocation", "tail" : "(location: Location): Unit", "member" : "com.jafpl.steps.Step.setLocation", "link" : "com\/jafpl\/steps\/Step.html#setLocation(location:com.jafpl.graph.Location):Unit", "kind" : "abstract def"}, {"label" : "setConsumer", "tail" : "(consumer: DataConsumer): Unit", "member" : "com.jafpl.steps.Step.setConsumer", "link" : "com\/jafpl\/steps\/Step.html#setConsumer(consumer:com.jafpl.steps.DataConsumer):Unit", "kind" : "abstract def"}, {"label" : "bindingSpec", "tail" : "(): BindingSpecification", "member" : "com.jafpl.steps.Step.bindingSpec", "link" : "com\/jafpl\/steps\/Step.html#bindingSpec:com.jafpl.steps.BindingSpecification", "kind" : "abstract def"}, {"label" : "outputSpec", "tail" : "(): PortSpecification", "member" : "com.jafpl.steps.Step.outputSpec", "link" : "com\/jafpl\/steps\/Step.html#outputSpec:com.jafpl.steps.PortSpecification", "kind" : "abstract def"}, {"label" : "inputSpec", "tail" : "(): PortSpecification", "member" : "com.jafpl.steps.Step.inputSpec", "link" : "com\/jafpl\/steps\/Step.html#inputSpec:com.jafpl.steps.PortSpecification", "kind" : "abstract def"}, {"label" : "receive", "tail" : "(port: String, message: Message): Unit", "member" : "com.jafpl.steps.DataConsumer.receive", "link" : "com\/jafpl\/steps\/Step.html#receive(port:String,message:com.jafpl.messages.Message):Unit", "kind" : "abstract def"}, {"label" : "id", "tail" : "(): String", "member" : "com.jafpl.steps.DataConsumer.id", "link" : "com\/jafpl\/steps\/Step.html#id:String", "kind" : "abstract def"}], "shortDescription" : "An atomic pipeline step.", "trait" : "com\/jafpl\/steps\/Step.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.ViewportComposer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/ViewportComposer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/ViewportComposer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/ViewportComposer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/ViewportComposer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/ViewportComposer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/ViewportComposer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/ViewportComposer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportComposer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/ViewportComposer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/ViewportComposer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/ViewportComposer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/ViewportComposer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/ViewportComposer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/ViewportComposer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/ViewportComposer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/ViewportComposer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/ViewportComposer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "recompose", "tail" : "(): Message", "member" : "com.jafpl.steps.ViewportComposer.recompose", "link" : "com\/jafpl\/steps\/ViewportComposer.html#recompose():com.jafpl.messages.Message", "kind" : "abstract def"}, {"label" : "decompose", "tail" : "(message: Message): List[ViewportItem]", "member" : "com.jafpl.steps.ViewportComposer.decompose", "link" : "com\/jafpl\/steps\/ViewportComposer.html#decompose(message:com.jafpl.messages.Message):List[com.jafpl.steps.ViewportItem]", "kind" : "abstract def"}], "shortDescription" : "Decompose and recompose data for viewport processing.", "trait" : "com\/jafpl\/steps\/ViewportComposer.html", "kind" : "trait"}, {"name" : "com.jafpl.steps.ViewportItem", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/steps\/ViewportItem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/steps\/ViewportItem.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/steps\/ViewportItem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/steps\/ViewportItem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/steps\/ViewportItem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/steps\/ViewportItem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/steps\/ViewportItem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/steps\/ViewportItem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/steps\/ViewportItem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/steps\/ViewportItem.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/steps\/ViewportItem.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/steps\/ViewportItem.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/steps\/ViewportItem.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/steps\/ViewportItem.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/steps\/ViewportItem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/steps\/ViewportItem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/steps\/ViewportItem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "putItems", "tail" : "(items: List[Any]): Unit", "member" : "com.jafpl.steps.ViewportItem.putItems", "link" : "com\/jafpl\/steps\/ViewportItem.html#putItems(items:List[Any]):Unit", "kind" : "abstract def"}, {"label" : "getMetadata", "tail" : "(): Metadata", "member" : "com.jafpl.steps.ViewportItem.getMetadata", "link" : "com\/jafpl\/steps\/ViewportItem.html#getMetadata:com.jafpl.messages.Metadata", "kind" : "abstract def"}, {"label" : "getItem", "tail" : "(): Any", "member" : "com.jafpl.steps.ViewportItem.getItem", "link" : "com\/jafpl\/steps\/ViewportItem.html#getItem:Any", "kind" : "abstract def"}], "shortDescription" : "A representation of a sub-portion of a resource for viewport processing.", "trait" : "com\/jafpl\/steps\/ViewportItem.html", "kind" : "trait"}], "com.jafpl.config" : [{"name" : "com.jafpl.config.DefaultJafplConfigurer", "shortDescription" : "The default com.jafpl.config.Jafpl configurer.", "members_class" : [{"label" : "configure", "tail" : "(jafpl: Jafpl): Unit", "member" : "com.jafpl.config.DefaultJafplConfigurer.configure", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#configure(jafpl:com.jafpl.config.Jafpl):Unit", "kind" : "def"}, {"member" : "com.jafpl.config.DefaultJafplConfigurer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/config\/DefaultJafplConfigurer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/config\/DefaultJafplConfigurer.html", "kind" : "class"}, {"name" : "com.jafpl.config.Jafpl", "shortDescription" : "Just Another Fine Pipeline Language.", "object" : "com\/jafpl\/config\/Jafpl$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.config.Jafpl.close", "link" : "com\/jafpl\/config\/Jafpl.html#close():Unit", "kind" : "def"}, {"label" : "newGraph", "tail" : "(): Graph", "member" : "com.jafpl.config.Jafpl.newGraph", "link" : "com\/jafpl\/config\/Jafpl.html#newGraph():com.jafpl.graph.Graph", "kind" : "def"}, {"label" : "errorListener_=", "tail" : "(listener: ErrorListener): Unit", "member" : "com.jafpl.config.Jafpl.errorListener_=", "link" : "com\/jafpl\/config\/Jafpl.html#errorListener_=(listener:com.jafpl.util.ErrorListener):Unit", "kind" : "def"}, {"label" : "errorListener", "tail" : "(): ErrorListener", "member" : "com.jafpl.config.Jafpl.errorListener", "link" : "com\/jafpl\/config\/Jafpl.html#errorListener:com.jafpl.util.ErrorListener", "kind" : "def"}, {"label" : "traceEventManager_=", "tail" : "(manager: TraceEventManager): Unit", "member" : "com.jafpl.config.Jafpl.traceEventManager_=", "link" : "com\/jafpl\/config\/Jafpl.html#traceEventManager_=(manager:com.jafpl.util.TraceEventManager):Unit", "kind" : "def"}, {"label" : "traceEventManager", "tail" : "(): TraceEventManager", "member" : "com.jafpl.config.Jafpl.traceEventManager", "link" : "com\/jafpl\/config\/Jafpl.html#traceEventManager:com.jafpl.util.TraceEventManager", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/config\/Jafpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/config\/Jafpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/config\/Jafpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/config\/Jafpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/config\/Jafpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/config\/Jafpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/config\/Jafpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/config\/Jafpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/config\/Jafpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/config\/Jafpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/config\/Jafpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/config\/Jafpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/config\/Jafpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/config\/Jafpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/config\/Jafpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/config\/Jafpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "newInstance", "tail" : "(): Jafpl", "member" : "com.jafpl.config.Jafpl.newInstance", "link" : "com\/jafpl\/config\/Jafpl$.html#newInstance():com.jafpl.config.Jafpl", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/config\/Jafpl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/config\/Jafpl$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/config\/Jafpl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/config\/Jafpl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/config\/Jafpl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/config\/Jafpl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/config\/Jafpl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/Jafpl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/config\/Jafpl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/config\/Jafpl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/config\/Jafpl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/config\/Jafpl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/config\/Jafpl$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/config\/Jafpl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/config\/Jafpl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/config\/Jafpl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/config\/Jafpl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/config\/Jafpl.html", "kind" : "object"}, {"name" : "com.jafpl.config.JafplConfigurer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/config\/JafplConfigurer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/config\/JafplConfigurer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/config\/JafplConfigurer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/config\/JafplConfigurer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/config\/JafplConfigurer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/config\/JafplConfigurer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/config\/JafplConfigurer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/JafplConfigurer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/JafplConfigurer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/config\/JafplConfigurer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/config\/JafplConfigurer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/config\/JafplConfigurer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/config\/JafplConfigurer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/config\/JafplConfigurer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/config\/JafplConfigurer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/config\/JafplConfigurer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/config\/JafplConfigurer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/config\/JafplConfigurer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/config\/JafplConfigurer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "configure", "tail" : "(jafpl: Jafpl): Unit", "member" : "com.jafpl.config.JafplConfigurer.configure", "link" : "com\/jafpl\/config\/JafplConfigurer.html#configure(jafpl:com.jafpl.config.Jafpl):Unit", "kind" : "abstract def"}], "shortDescription" : "A class for configuring a com.jafpl.config.Jafpl instance.", "trait" : "com\/jafpl\/config\/JafplConfigurer.html", "kind" : "trait"}], "com.jafpl.util" : [{"name" : "com.jafpl.util.DeadLetterListener", "shortDescription" : "", "members_class" : [{"label" : "receive", "tail" : "(): PartialFunction[Any, Unit]", "member" : "com.jafpl.util.DeadLetterListener.receive", "link" : "com\/jafpl\/util\/DeadLetterListener.html#receive:PartialFunction[Any,Unit]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.util.DeadLetterListener.logger", "link" : "com\/jafpl\/util\/DeadLetterListener.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.util.DeadLetterListener#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/jafpl\/util\/DeadLetterListener.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "com\/jafpl\/util\/DeadLetterListener.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/jafpl\/util\/DeadLetterListener.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/jafpl\/util\/DeadLetterListener.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/jafpl\/util\/DeadLetterListener.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/jafpl\/util\/DeadLetterListener.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/jafpl\/util\/DeadLetterListener.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/jafpl\/util\/DeadLetterListener.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/jafpl\/util\/DeadLetterListener.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/jafpl\/util\/DeadLetterListener.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/DeadLetterListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/DeadLetterListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/DeadLetterListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/DeadLetterListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/DeadLetterListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/DeadLetterListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/DeadLetterListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DeadLetterListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DeadLetterListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DeadLetterListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/DeadLetterListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/DeadLetterListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/DeadLetterListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/DeadLetterListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/DeadLetterListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/DeadLetterListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/DeadLetterListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/DeadLetterListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/DeadLetterListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/util\/DeadLetterListener.html", "kind" : "class"}, {"name" : "com.jafpl.util.DefaultErrorListener", "shortDescription" : "", "members_class" : [{"label" : "info", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.info", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#info(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.util.DefaultErrorListener.warning", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#warning(cause:Throwable):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.warning", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#warning(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "warning", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.warning", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#warning(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.util.DefaultErrorListener.error", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#error(cause:Throwable):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.error", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#error(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"label" : "error", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.DefaultErrorListener.error", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#error(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "def"}, {"member" : "com.jafpl.util.DefaultErrorListener#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/DefaultErrorListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/DefaultErrorListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/util\/DefaultErrorListener.html", "kind" : "class"}, {"name" : "com.jafpl.util.DefaultTraceEventManager", "shortDescription" : "", "object" : "com\/jafpl\/util\/DefaultTraceEventManager$.html", "members_class" : [{"label" : "trace", "tail" : "(level: String, message: String, event: String): Unit", "member" : "com.jafpl.util.DefaultTraceEventManager.trace", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#trace(level:String,message:String,event:String):Unit", "kind" : "def"}, {"label" : "trace", "tail" : "(message: String, event: String): Unit", "member" : "com.jafpl.util.DefaultTraceEventManager.trace", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#trace(message:String,event:String):Unit", "kind" : "def"}, {"label" : "traceEnabled", "tail" : "(event: String): Boolean", "member" : "com.jafpl.util.DefaultTraceEventManager.traceEnabled", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#traceEnabled(event:String):Boolean", "kind" : "def"}, {"label" : "disableTrace", "tail" : "(event: String): Unit", "member" : "com.jafpl.util.DefaultTraceEventManager.disableTrace", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#disableTrace(event:String):Unit", "kind" : "def"}, {"label" : "enableTrace", "tail" : "(event: String): Unit", "member" : "com.jafpl.util.DefaultTraceEventManager.enableTrace", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#enableTrace(event:String):Unit", "kind" : "def"}, {"label" : "disabledTraces", "tail" : ": HashSet[String]", "member" : "com.jafpl.util.DefaultTraceEventManager.disabledTraces", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#disabledTraces:scala.collection.mutable.HashSet[String]", "kind" : "val"}, {"label" : "enabledTraces", "tail" : ": HashSet[String]", "member" : "com.jafpl.util.DefaultTraceEventManager.enabledTraces", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#enabledTraces:scala.collection.mutable.HashSet[String]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.util.DefaultTraceEventManager.logger", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.util.DefaultTraceEventManager#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/DefaultTraceEventManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ALL", "tail" : ": String", "member" : "com.jafpl.util.DefaultTraceEventManager.ALL", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#ALL:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/DefaultTraceEventManager$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/util\/DefaultTraceEventManager.html", "kind" : "object"}, {"name" : "com.jafpl.util.ErrorListener", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ErrorListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ErrorListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ErrorListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ErrorListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ErrorListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ErrorListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ErrorListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ErrorListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ErrorListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ErrorListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ErrorListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ErrorListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ErrorListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ErrorListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ErrorListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ErrorListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ErrorListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "info", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.info", "link" : "com\/jafpl\/util\/ErrorListener.html#info(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "warning", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.util.ErrorListener.warning", "link" : "com\/jafpl\/util\/ErrorListener.html#warning(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "warning", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.warning", "link" : "com\/jafpl\/util\/ErrorListener.html#warning(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "warning", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.warning", "link" : "com\/jafpl\/util\/ErrorListener.html#warning(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "error", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.util.ErrorListener.error", "link" : "com\/jafpl\/util\/ErrorListener.html#error(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "error", "tail" : "(cause: Throwable, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.error", "link" : "com\/jafpl\/util\/ErrorListener.html#error(cause:Throwable,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}, {"label" : "error", "tail" : "(message: String, location: Option[Location]): Unit", "member" : "com.jafpl.util.ErrorListener.error", "link" : "com\/jafpl\/util\/ErrorListener.html#error(message:String,location:Option[com.jafpl.graph.Location]):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ErrorListener.html", "kind" : "trait"}, {"name" : "com.jafpl.util.ItemComparator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ItemComparator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ItemComparator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ItemComparator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ItemComparator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ItemComparator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ItemComparator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ItemComparator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemComparator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ItemComparator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ItemComparator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ItemComparator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ItemComparator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ItemComparator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ItemComparator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ItemComparator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ItemComparator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ItemComparator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "areTheSame", "tail" : "(a: Any, b: Any): Boolean", "member" : "com.jafpl.util.ItemComparator.areTheSame", "link" : "com\/jafpl\/util\/ItemComparator.html#areTheSame(a:Any,b:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ItemComparator.html", "kind" : "trait"}, {"name" : "com.jafpl.util.ItemTester", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/ItemTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/ItemTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/ItemTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/ItemTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/ItemTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/ItemTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/ItemTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/ItemTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/ItemTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/ItemTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/ItemTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/ItemTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/ItemTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/ItemTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/ItemTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/ItemTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/ItemTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "test", "tail" : "(item: List[Message], bindings: Map[String, Message]): Boolean", "member" : "com.jafpl.util.ItemTester.test", "link" : "com\/jafpl\/util\/ItemTester.html#test(item:List[com.jafpl.messages.Message],bindings:Map[String,com.jafpl.messages.Message]):Boolean", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/ItemTester.html", "kind" : "trait"}, {"name" : "com.jafpl.util.TraceEventManager", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/util\/TraceEventManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/util\/TraceEventManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/util\/TraceEventManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/util\/TraceEventManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/util\/TraceEventManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/util\/TraceEventManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/util\/TraceEventManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/TraceEventManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/TraceEventManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/util\/TraceEventManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/util\/TraceEventManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/util\/TraceEventManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/util\/TraceEventManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/util\/TraceEventManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/util\/TraceEventManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/util\/TraceEventManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/util\/TraceEventManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/util\/TraceEventManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/util\/TraceEventManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "trace", "tail" : "(level: String, message: String, event: String): Unit", "member" : "com.jafpl.util.TraceEventManager.trace", "link" : "com\/jafpl\/util\/TraceEventManager.html#trace(level:String,message:String,event:String):Unit", "kind" : "abstract def"}, {"label" : "trace", "tail" : "(message: String, event: String): Unit", "member" : "com.jafpl.util.TraceEventManager.trace", "link" : "com\/jafpl\/util\/TraceEventManager.html#trace(message:String,event:String):Unit", "kind" : "abstract def"}, {"label" : "traceEnabled", "tail" : "(event: String): Boolean", "member" : "com.jafpl.util.TraceEventManager.traceEnabled", "link" : "com\/jafpl\/util\/TraceEventManager.html#traceEnabled(event:String):Boolean", "kind" : "abstract def"}, {"label" : "disableTrace", "tail" : "(event: String): Unit", "member" : "com.jafpl.util.TraceEventManager.disableTrace", "link" : "com\/jafpl\/util\/TraceEventManager.html#disableTrace(event:String):Unit", "kind" : "abstract def"}, {"label" : "enableTrace", "tail" : "(event: String): Unit", "member" : "com.jafpl.util.TraceEventManager.enableTrace", "link" : "com\/jafpl\/util\/TraceEventManager.html#enableTrace(event:String):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/util\/TraceEventManager.html", "kind" : "trait"}], "com.jafpl.runtime" : [{"name" : "com.jafpl.runtime.ExpressionEvaluator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "precomputedValue", "tail" : "(expr: Any, value: Any, context: List[Message], bindings: Map[String, Message], options: Option[Any]): Message", "member" : "com.jafpl.runtime.ExpressionEvaluator.precomputedValue", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#precomputedValue(expr:Any,value:Any,context:List[com.jafpl.messages.Message],bindings:Map[String,com.jafpl.messages.Message],options:Option[Any]):com.jafpl.messages.Message", "kind" : "abstract def"}, {"label" : "booleanValue", "tail" : "(expr: Any, context: List[Message], bindings: Map[String, Message], options: Option[Any]): Boolean", "member" : "com.jafpl.runtime.ExpressionEvaluator.booleanValue", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#booleanValue(expr:Any,context:List[com.jafpl.messages.Message],bindings:Map[String,com.jafpl.messages.Message],options:Option[Any]):Boolean", "kind" : "abstract def"}, {"label" : "singletonValue", "tail" : "(expr: Any, context: List[Message], bindings: Map[String, Message], options: Option[Any]): Message", "member" : "com.jafpl.runtime.ExpressionEvaluator.singletonValue", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#singletonValue(expr:Any,context:List[com.jafpl.messages.Message],bindings:Map[String,com.jafpl.messages.Message],options:Option[Any]):com.jafpl.messages.Message", "kind" : "abstract def"}, {"label" : "value", "tail" : "(expr: Any, context: List[Message], bindings: Map[String, Message], options: Option[Any]): Message", "member" : "com.jafpl.runtime.ExpressionEvaluator.value", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#value(expr:Any,context:List[com.jafpl.messages.Message],bindings:Map[String,com.jafpl.messages.Message],options:Option[Any]):com.jafpl.messages.Message", "kind" : "abstract def"}, {"label" : "newInstance", "tail" : "(): ExpressionEvaluator", "member" : "com.jafpl.runtime.ExpressionEvaluator.newInstance", "link" : "com\/jafpl\/runtime\/ExpressionEvaluator.html#newInstance():com.jafpl.runtime.ExpressionEvaluator", "kind" : "abstract def"}], "shortDescription" : "Evaluate expressions (for variable bindings and the alternatives in a choose).", "trait" : "com\/jafpl\/runtime\/ExpressionEvaluator.html", "kind" : "trait"}, {"name" : "com.jafpl.runtime.GraphRuntime", "shortDescription" : "Execute a pipeline.", "members_class" : [{"label" : "stop", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.stop", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#stop():Unit", "kind" : "def"}, {"label" : "waitForPipeline", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.waitForPipeline", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#waitForPipeline():Unit", "kind" : "def"}, {"label" : "runInBackground", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.runInBackground", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#runInBackground():Unit", "kind" : "def"}, {"label" : "run", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.run", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#run():Unit", "kind" : "def"}, {"label" : "finish", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.runtime.GraphRuntime.finish", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finish(cause:Throwable):Unit", "kind" : "def"}, {"label" : "finish", "tail" : "(): Unit", "member" : "com.jafpl.runtime.GraphRuntime.finish", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finish():Unit", "kind" : "def"}, {"label" : "setOption", "tail" : "(option: String, value: Any): Unit", "member" : "com.jafpl.runtime.GraphRuntime.setOption", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#setOption(option:String,value:Any):Unit", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Map[String, DataConsumerProxy]", "member" : "com.jafpl.runtime.GraphRuntime.outputs", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#outputs:Map[String,com.jafpl.steps.DataConsumerProxy]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Map[String, DataProvider]", "member" : "com.jafpl.runtime.GraphRuntime.inputs", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#inputs:Map[String,com.jafpl.steps.DataProvider]", "kind" : "def"}, {"label" : "exception", "tail" : "(): Option[Throwable]", "member" : "com.jafpl.runtime.GraphRuntime.exception", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#exception:Option[Throwable]", "kind" : "def"}, {"label" : "finished", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.GraphRuntime.finished", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finished:Boolean", "kind" : "def"}, {"label" : "started", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.GraphRuntime.started", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#started:Boolean", "kind" : "def"}, {"label" : "traceEventManager_=", "tail" : "(manager: TraceEventManager): Unit", "member" : "com.jafpl.runtime.GraphRuntime.traceEventManager_=", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#traceEventManager_=(manager:com.jafpl.util.TraceEventManager):Unit", "kind" : "def"}, {"label" : "traceEventManager", "tail" : "(): TraceEventManager", "member" : "com.jafpl.runtime.GraphRuntime.traceEventManager", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#traceEventManager:com.jafpl.util.TraceEventManager", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.runtime.GraphRuntime.logger", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.runtime.GraphRuntime#<init>", "error" : "unsupported entity"}, {"label" : "runtime", "tail" : ": RuntimeConfiguration", "member" : "com.jafpl.runtime.GraphRuntime.runtime", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#runtime:com.jafpl.runtime.RuntimeConfiguration", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.runtime.GraphRuntime.graph", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/GraphRuntime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/GraphRuntime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/GraphRuntime.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.InputProxy", "shortDescription" : "", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.runtime.InputProxy.close", "link" : "com\/jafpl\/runtime\/InputProxy.html#close():Unit", "kind" : "def"}, {"label" : "receive", "tail" : "(port: String, message: Message): Unit", "member" : "com.jafpl.runtime.InputProxy.receive", "link" : "com\/jafpl\/runtime\/InputProxy.html#receive(port:String,message:com.jafpl.messages.Message):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): String", "member" : "com.jafpl.runtime.InputProxy.id", "link" : "com\/jafpl\/runtime\/InputProxy.html#id:String", "kind" : "def"}, {"label" : "send", "tail" : "(message: Message): Unit", "member" : "com.jafpl.runtime.InputProxy.send", "link" : "com\/jafpl\/runtime\/InputProxy.html#send(message:com.jafpl.messages.Message):Unit", "kind" : "def"}, {"label" : "closed", "tail" : "(): Boolean", "member" : "com.jafpl.runtime.InputProxy.closed", "link" : "com\/jafpl\/runtime\/InputProxy.html#closed:Boolean", "kind" : "def"}, {"member" : "com.jafpl.runtime.InputProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/InputProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/InputProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/InputProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/InputProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/InputProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/InputProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/InputProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/InputProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/InputProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/InputProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/InputProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/InputProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/InputProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/InputProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/InputProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/InputProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/InputProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/InputProxy.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.OutputProxy", "shortDescription" : "", "members_class" : [{"label" : "receive", "tail" : "(port: String, message: Message): Unit", "member" : "com.jafpl.runtime.OutputProxy.receive", "link" : "com\/jafpl\/runtime\/OutputProxy.html#receive(port:String,message:com.jafpl.messages.Message):Unit", "kind" : "def"}, {"label" : "id", "tail" : "(): String", "member" : "com.jafpl.runtime.OutputProxy.id", "link" : "com\/jafpl\/runtime\/OutputProxy.html#id:String", "kind" : "def"}, {"label" : "setConsumer", "tail" : "(provider: DataConsumer): Unit", "member" : "com.jafpl.runtime.OutputProxy.setConsumer", "link" : "com\/jafpl\/runtime\/OutputProxy.html#setConsumer(provider:com.jafpl.steps.DataConsumer):Unit", "kind" : "def"}, {"label" : "provider", "tail" : "(): Option[DataConsumer]", "member" : "com.jafpl.runtime.OutputProxy.provider", "link" : "com\/jafpl\/runtime\/OutputProxy.html#provider:Option[com.jafpl.steps.DataConsumer]", "kind" : "def"}, {"member" : "com.jafpl.runtime.OutputProxy#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/OutputProxy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/OutputProxy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/OutputProxy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/OutputProxy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/OutputProxy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/OutputProxy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/OutputProxy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/OutputProxy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/OutputProxy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/OutputProxy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/OutputProxy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/OutputProxy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/OutputProxy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/OutputProxy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/OutputProxy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/OutputProxy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/OutputProxy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/OutputProxy.html", "kind" : "class"}, {"name" : "com.jafpl.runtime.Reaper", "shortDescription" : "", "object" : "com\/jafpl\/runtime\/Reaper$.html", "members_class" : [{"label" : "receive", "tail" : "(): PartialFunction[Any, Unit]", "member" : "com.jafpl.runtime.Reaper.receive", "link" : "com\/jafpl\/runtime\/Reaper.html#receive:PartialFunction[Any,Unit]", "kind" : "final def"}, {"member" : "com.jafpl.runtime.Reaper#<init>", "error" : "unsupported entity"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/jafpl\/runtime\/Reaper.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/jafpl\/runtime\/Reaper.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.preRestart", "link" : "com\/jafpl\/runtime\/Reaper.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.postStop", "link" : "com\/jafpl\/runtime\/Reaper.html#postStop():Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/jafpl\/runtime\/Reaper.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/jafpl\/runtime\/Reaper.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/jafpl\/runtime\/Reaper.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/jafpl\/runtime\/Reaper.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/jafpl\/runtime\/Reaper.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/jafpl\/runtime\/Reaper.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/jafpl\/runtime\/Reaper.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/jafpl\/runtime\/Reaper.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/jafpl\/runtime\/Reaper.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/jafpl\/runtime\/Reaper.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/jafpl\/runtime\/Reaper.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/Reaper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/Reaper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/Reaper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/Reaper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/Reaper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/Reaper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/Reaper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/Reaper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/Reaper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/Reaper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/Reaper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/Reaper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/Reaper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/Reaper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/Reaper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/Reaper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "WatchMe", "tail" : "", "member" : "com.jafpl.runtime.Reaper.WatchMe", "link" : "com\/jafpl\/runtime\/Reaper$.html#WatchMeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/Reaper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/Reaper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/Reaper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/Reaper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/Reaper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/Reaper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/Reaper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/Reaper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/Reaper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/Reaper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/Reaper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/Reaper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/Reaper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/Reaper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/Reaper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/Reaper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/Reaper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/runtime\/Reaper.html", "kind" : "object"}, {"name" : "com.jafpl.runtime.RuntimeConfiguration", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "watchdogTimeout", "tail" : "(): Long", "member" : "com.jafpl.runtime.RuntimeConfiguration.watchdogTimeout", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#watchdogTimeout:Long", "kind" : "abstract def"}, {"label" : "traceEnabled", "tail" : "(trace: String): Boolean", "member" : "com.jafpl.runtime.RuntimeConfiguration.traceEnabled", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#traceEnabled(trace:String):Boolean", "kind" : "abstract def"}, {"label" : "expressionEvaluator", "tail" : "(): ExpressionEvaluator", "member" : "com.jafpl.runtime.RuntimeConfiguration.expressionEvaluator", "link" : "com\/jafpl\/runtime\/RuntimeConfiguration.html#expressionEvaluator:com.jafpl.runtime.ExpressionEvaluator", "kind" : "abstract def"}], "shortDescription" : "The runtime configuration for pipeline execution.", "trait" : "com\/jafpl\/runtime\/RuntimeConfiguration.html", "kind" : "trait"}], "com.jafpl.injection" : [{"name" : "com.jafpl.injection.GraphInjectable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/injection\/GraphInjectable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/injection\/GraphInjectable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/injection\/GraphInjectable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/injection\/GraphInjectable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/injection\/GraphInjectable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/injection\/GraphInjectable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/injection\/GraphInjectable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/GraphInjectable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/GraphInjectable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/GraphInjectable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/injection\/GraphInjectable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/injection\/GraphInjectable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/injection\/GraphInjectable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/injection\/GraphInjectable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/injection\/GraphInjectable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/injection\/GraphInjectable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/injection\/GraphInjectable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/injection\/GraphInjectable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/injection\/GraphInjectable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "receiveBinding", "tail" : "(message: BindingMessage): Unit", "member" : "com.jafpl.injection.GraphInjectable.receiveBinding", "link" : "com\/jafpl\/injection\/GraphInjectable.html#receiveBinding(message:com.jafpl.messages.BindingMessage):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/injection\/GraphInjectable.html", "kind" : "trait"}, {"name" : "com.jafpl.injection.PortInjectable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/injection\/PortInjectable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/injection\/PortInjectable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/injection\/PortInjectable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/injection\/PortInjectable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/injection\/PortInjectable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/injection\/PortInjectable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/injection\/PortInjectable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/PortInjectable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/PortInjectable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/PortInjectable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/injection\/PortInjectable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/injection\/PortInjectable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/injection\/PortInjectable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/injection\/PortInjectable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/injection\/PortInjectable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/injection\/PortInjectable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/injection\/PortInjectable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/injection\/PortInjectable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/injection\/PortInjectable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "run", "tail" : "(context: ItemMessage): Unit", "member" : "com.jafpl.injection.PortInjectable.run", "link" : "com\/jafpl\/injection\/PortInjectable.html#run(context:com.jafpl.messages.ItemMessage):Unit", "kind" : "abstract def"}, {"label" : "port", "tail" : "(): String", "member" : "com.jafpl.injection.PortInjectable.port", "link" : "com\/jafpl\/injection\/PortInjectable.html#port:String", "kind" : "abstract def"}, {"label" : "receiveBinding", "tail" : "(message: BindingMessage): Unit", "member" : "com.jafpl.injection.GraphInjectable.receiveBinding", "link" : "com\/jafpl\/injection\/PortInjectable.html#receiveBinding(message:com.jafpl.messages.BindingMessage):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/injection\/PortInjectable.html", "kind" : "trait"}, {"name" : "com.jafpl.injection.StepInjectable", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/injection\/StepInjectable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/injection\/StepInjectable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/injection\/StepInjectable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/injection\/StepInjectable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/injection\/StepInjectable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/injection\/StepInjectable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/injection\/StepInjectable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/StepInjectable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/StepInjectable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/injection\/StepInjectable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/injection\/StepInjectable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/injection\/StepInjectable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/injection\/StepInjectable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/injection\/StepInjectable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/injection\/StepInjectable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/injection\/StepInjectable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/injection\/StepInjectable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/injection\/StepInjectable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/injection\/StepInjectable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "afterRun", "tail" : "(): Unit", "member" : "com.jafpl.injection.StepInjectable.afterRun", "link" : "com\/jafpl\/injection\/StepInjectable.html#afterRun():Unit", "kind" : "abstract def"}, {"label" : "beforeRun", "tail" : "(): Unit", "member" : "com.jafpl.injection.StepInjectable.beforeRun", "link" : "com\/jafpl\/injection\/StepInjectable.html#beforeRun():Unit", "kind" : "abstract def"}, {"label" : "receiveBinding", "tail" : "(message: BindingMessage): Unit", "member" : "com.jafpl.injection.GraphInjectable.receiveBinding", "link" : "com\/jafpl\/injection\/StepInjectable.html#receiveBinding(message:com.jafpl.messages.BindingMessage):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/injection\/StepInjectable.html", "kind" : "trait"}], "com.jafpl.exceptions" : [{"name" : "com.jafpl.exceptions.JafplException", "shortDescription" : "", "object" : "com\/jafpl\/exceptions\/JafplException$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.exceptions.JafplException.toString", "link" : "com\/jafpl\/exceptions\/JafplException.html#toString():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "com.jafpl.exceptions.JafplException.getMessage", "link" : "com\/jafpl\/exceptions\/JafplException.html#getMessage():String", "kind" : "def"}, {"label" : "jafplExceptionCode", "tail" : "(): Any", "member" : "com.jafpl.exceptions.JafplException.jafplExceptionCode", "link" : "com\/jafpl\/exceptions\/JafplException.html#jafplExceptionCode:Any", "kind" : "def"}, {"label" : "template", "tail" : ": String", "member" : "com.jafpl.exceptions.JafplException.template", "link" : "com\/jafpl\/exceptions\/JafplException.html#template:String", "kind" : "val"}, {"label" : "details", "tail" : ": List[String]", "member" : "com.jafpl.exceptions.JafplException.details", "link" : "com\/jafpl\/exceptions\/JafplException.html#details:List[String]", "kind" : "val"}, {"label" : "location", "tail" : ": Option[Location]", "member" : "com.jafpl.exceptions.JafplException.location", "link" : "com\/jafpl\/exceptions\/JafplException.html#location:Option[com.jafpl.graph.Location]", "kind" : "val"}, {"label" : "code", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.code", "link" : "com\/jafpl\/exceptions\/JafplException.html#code:Int", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/jafpl\/exceptions\/JafplException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/jafpl\/exceptions\/JafplException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/jafpl\/exceptions\/JafplException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/jafpl\/exceptions\/JafplException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/jafpl\/exceptions\/JafplException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/jafpl\/exceptions\/JafplException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/JafplException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/JafplException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/JafplException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/JafplException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/JafplException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/JafplException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/JafplException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/JafplException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/JafplException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/JafplException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/JafplException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/JafplException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/JafplException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unexpectedItemType", "tail" : "(item: String, port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedItemType", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedItemType(item:String,port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "badPort", "tail" : "(port: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.badPort", "link" : "com\/jafpl\/exceptions\/JafplException$.html#badPort(port:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "cardinalityError", "tail" : "(port: String, count: String, spec: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.cardinalityError", "link" : "com\/jafpl\/exceptions\/JafplException$.html#cardinalityError(port:String,count:String,spec:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpectedSequence", "tail" : "(step: String, port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedSequence", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedSequence(step:String,port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "internalError", "tail" : "(msg: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.internalError", "link" : "com\/jafpl\/exceptions\/JafplException$.html#internalError(msg:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpecteStepType", "tail" : "(node: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpecteStepType", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpecteStepType(node:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidConfigurationValue", "tail" : "(thing: String, value: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidConfigurationValue", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidConfigurationValue(thing:String,value:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "notRunning", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.notRunning", "link" : "com\/jafpl\/exceptions\/JafplException$.html#notRunning():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "setUnknownOption", "tail" : "(optname: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.setUnknownOption", "link" : "com\/jafpl\/exceptions\/JafplException$.html#setUnknownOption(optname:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "watchdogTimeout", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.watchdogTimeout", "link" : "com\/jafpl\/exceptions\/JafplException$.html#watchdogTimeout():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpectedValueObject", "tail" : "(value: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedValueObject", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedValueObject(value:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "noBindingFor", "tail" : "(thing: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.noBindingFor", "link" : "com\/jafpl\/exceptions\/JafplException$.html#noBindingFor(thing:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpectedExpressionObject", "tail" : "(expr: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedExpressionObject", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedExpressionObject(expr:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "singletonContextExpected", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.singletonContextExpected", "link" : "com\/jafpl\/exceptions\/JafplException$.html#singletonContextExpected():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "configurationClosed", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.configurationClosed", "link" : "com\/jafpl\/exceptions\/JafplException$.html#configurationClosed():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unconfigured", "tail" : "(thing: String): JafplException", "member" : "com.jafpl.exceptions.JafplException.unconfigured", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unconfigured(thing:String):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "noInputOnLoop", "tail" : "(port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.noInputOnLoop", "link" : "com\/jafpl\/exceptions\/JafplException$.html#noInputOnLoop(port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpectedMessage", "tail" : "(item: String, port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedMessage", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedMessage(item:String,port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "inputOnEmptySource", "tail" : "(from: String, fromPort: String, toPort: String, item: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.inputOnEmptySource", "link" : "com\/jafpl\/exceptions\/JafplException$.html#inputOnEmptySource(from:String,fromPort:String,toPort:String,item:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidWildcardCardinality", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidWildcardCardinality", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidWildcardCardinality():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidCardinality", "tail" : "(port: String, cardinality: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidCardinality", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidCardinality(port:String,cardinality:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "abstractContainer", "tail" : "(actor: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.abstractContainer", "link" : "com\/jafpl\/exceptions\/JafplException$.html#abstractContainer(actor:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidGraph", "tail" : "(): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidGraph", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidGraph():com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "startRedefined", "tail" : "(step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.startRedefined", "link" : "com\/jafpl\/exceptions\/JafplException$.html#startRedefined(step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "whileLoopTestRequired", "tail" : "(location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.whileLoopTestRequired", "link" : "com\/jafpl\/exceptions\/JafplException$.html#whileLoopTestRequired(location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidInputPort", "tail" : "(port: String, step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidInputPort", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidInputPort(port:String,step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "untilLoopTestRequired", "tail" : "(location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.untilLoopTestRequired", "link" : "com\/jafpl\/exceptions\/JafplException$.html#untilLoopTestRequired(location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "graphClosed", "tail" : "(location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.graphClosed", "link" : "com\/jafpl\/exceptions\/JafplException$.html#graphClosed(location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "loopDetected", "tail" : "(loop: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.loopDetected", "link" : "com\/jafpl\/exceptions\/JafplException$.html#loopDetected(loop:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "readInsideContainer", "tail" : "(from: String, to: String, fromDepth: String, toDepth: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.readInsideContainer", "link" : "com\/jafpl\/exceptions\/JafplException$.html#readInsideContainer(from:String,to:String,fromDepth:String,toDepth:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "dupOptionName", "tail" : "(option: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.dupOptionName", "link" : "com\/jafpl\/exceptions\/JafplException$.html#dupOptionName(option:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "dupOutputPort", "tail" : "(port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.dupOutputPort", "link" : "com\/jafpl\/exceptions\/JafplException$.html#dupOutputPort(port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "dupInputPort", "tail" : "(port: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.dupInputPort", "link" : "com\/jafpl\/exceptions\/JafplException$.html#dupInputPort(port:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "unexpectedCardinality", "tail" : "(step: String, port: String, cardinality: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.unexpectedCardinality", "link" : "com\/jafpl\/exceptions\/JafplException$.html#unexpectedCardinality(step:String,port:String,cardinality:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidOutputs", "tail" : "(step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidOutputs", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidOutputs(step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "invalidInputs", "tail" : "(step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.invalidInputs", "link" : "com\/jafpl\/exceptions\/JafplException$.html#invalidInputs(step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "badLoopInputPort", "tail" : "(port: String, step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.badLoopInputPort", "link" : "com\/jafpl\/exceptions\/JafplException$.html#badLoopInputPort(port:String,step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "requiredVariableBindingMissing", "tail" : "(varname: String, step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.requiredVariableBindingMissing", "link" : "com\/jafpl\/exceptions\/JafplException$.html#requiredVariableBindingMissing(varname:String,step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "requiredInputMissing", "tail" : "(port: String, step: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.requiredInputMissing", "link" : "com\/jafpl\/exceptions\/JafplException$.html#requiredInputMissing(port:String,step:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "variableNotInScope", "tail" : "(varname: String, to: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.variableNotInScope", "link" : "com\/jafpl\/exceptions\/JafplException$.html#variableNotInScope(varname:String,to:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "dupPriorityEdge", "tail" : "(from: String, to: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.dupPriorityEdge", "link" : "com\/jafpl\/exceptions\/JafplException$.html#dupPriorityEdge(from:String,to:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "differentGraphs", "tail" : "(from: String, to: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.differentGraphs", "link" : "com\/jafpl\/exceptions\/JafplException$.html#differentGraphs(from:String,to:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "dupContainerStart", "tail" : "(start: String, dupStart: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.dupContainerStart", "link" : "com\/jafpl\/exceptions\/JafplException$.html#dupContainerStart(start:String,dupStart:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "badContainerEnd", "tail" : "(expectedEnd: String, actualEnd: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.badContainerEnd", "link" : "com\/jafpl\/exceptions\/JafplException$.html#badContainerEnd(expectedEnd:String,actualEnd:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "childForbidden", "tail" : "(parent: String, child: String, location: Option[Location]): JafplException", "member" : "com.jafpl.exceptions.JafplException.childForbidden", "link" : "com\/jafpl\/exceptions\/JafplException$.html#childForbidden(parent:String,child:String,location:Option[com.jafpl.graph.Location]):com.jafpl.exceptions.JafplException", "kind" : "def"}, {"label" : "UNEXPECTED_ITEM_TYPE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_ITEM_TYPE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_ITEM_TYPE:Int", "kind" : "val"}, {"label" : "BAD_PORT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.BAD_PORT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#BAD_PORT:Int", "kind" : "val"}, {"label" : "CARDINALITY_ERROR", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.CARDINALITY_ERROR", "link" : "com\/jafpl\/exceptions\/JafplException$.html#CARDINALITY_ERROR:Int", "kind" : "val"}, {"label" : "UNEXPECTED_SEQUENCE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_SEQUENCE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_SEQUENCE:Int", "kind" : "val"}, {"label" : "INTERNAL_ERROR", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INTERNAL_ERROR", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INTERNAL_ERROR:Int", "kind" : "val"}, {"label" : "UNEXPECTED_STEP_TYPE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_STEP_TYPE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_STEP_TYPE:Int", "kind" : "val"}, {"label" : "INVALID_CONFIG_VALUE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_CONFIG_VALUE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_CONFIG_VALUE:Int", "kind" : "val"}, {"label" : "NOT_RUNNING", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.NOT_RUNNING", "link" : "com\/jafpl\/exceptions\/JafplException$.html#NOT_RUNNING:Int", "kind" : "val"}, {"label" : "UNKNOWN_OPTION", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNKNOWN_OPTION", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNKNOWN_OPTION:Int", "kind" : "val"}, {"label" : "WATCHDOG_TIMEOUT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.WATCHDOG_TIMEOUT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#WATCHDOG_TIMEOUT:Int", "kind" : "val"}, {"label" : "UNEXPECTED_VALUE_OBJECT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_VALUE_OBJECT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_VALUE_OBJECT:Int", "kind" : "val"}, {"label" : "NO_BINDING", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.NO_BINDING", "link" : "com\/jafpl\/exceptions\/JafplException$.html#NO_BINDING:Int", "kind" : "val"}, {"label" : "UNEXPECTED_EXPRESSION_OBJECT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_EXPRESSION_OBJECT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_EXPRESSION_OBJECT:Int", "kind" : "val"}, {"label" : "SINGLETON_CONTEXT_EXPECTED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.SINGLETON_CONTEXT_EXPECTED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#SINGLETON_CONTEXT_EXPECTED:Int", "kind" : "val"}, {"label" : "CONFIG_CLOSED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.CONFIG_CLOSED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#CONFIG_CLOSED:Int", "kind" : "val"}, {"label" : "UNCONFIGURED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNCONFIGURED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNCONFIGURED:Int", "kind" : "val"}, {"label" : "NO_INPUT_ON_LOOP", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.NO_INPUT_ON_LOOP", "link" : "com\/jafpl\/exceptions\/JafplException$.html#NO_INPUT_ON_LOOP:Int", "kind" : "val"}, {"label" : "UNEXPECTED_MESSAGE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_MESSAGE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_MESSAGE:Int", "kind" : "val"}, {"label" : "EMPTY_SOURCE_INPUT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.EMPTY_SOURCE_INPUT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#EMPTY_SOURCE_INPUT:Int", "kind" : "val"}, {"label" : "WILDCARD_CARDINALITY", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.WILDCARD_CARDINALITY", "link" : "com\/jafpl\/exceptions\/JafplException$.html#WILDCARD_CARDINALITY:Int", "kind" : "val"}, {"label" : "INVALID_CARDINALITY", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_CARDINALITY", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_CARDINALITY:Int", "kind" : "val"}, {"label" : "ABSTRACT_CONTAINER", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.ABSTRACT_CONTAINER", "link" : "com\/jafpl\/exceptions\/JafplException$.html#ABSTRACT_CONTAINER:Int", "kind" : "val"}, {"label" : "INVALID_GRAPH", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_GRAPH", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_GRAPH:Int", "kind" : "val"}, {"label" : "START_REDEF", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.START_REDEF", "link" : "com\/jafpl\/exceptions\/JafplException$.html#START_REDEF:Int", "kind" : "val"}, {"label" : "WHILE_LOOP_TEST_REQUIRED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.WHILE_LOOP_TEST_REQUIRED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#WHILE_LOOP_TEST_REQUIRED:Int", "kind" : "val"}, {"label" : "INVALID_INPUT_PORT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_INPUT_PORT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_INPUT_PORT:Int", "kind" : "val"}, {"label" : "UNTIL_LOOP_TEST_REQUIRED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNTIL_LOOP_TEST_REQUIRED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNTIL_LOOP_TEST_REQUIRED:Int", "kind" : "val"}, {"label" : "GRAPH_CLOSED", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.GRAPH_CLOSED", "link" : "com\/jafpl\/exceptions\/JafplException$.html#GRAPH_CLOSED:Int", "kind" : "val"}, {"label" : "LOOP_IN_GRAPH", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.LOOP_IN_GRAPH", "link" : "com\/jafpl\/exceptions\/JafplException$.html#LOOP_IN_GRAPH:Int", "kind" : "val"}, {"label" : "READ_INSIDE_CONTAINER", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.READ_INSIDE_CONTAINER", "link" : "com\/jafpl\/exceptions\/JafplException$.html#READ_INSIDE_CONTAINER:Int", "kind" : "val"}, {"label" : "DUP_OPTION_NAME", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DUP_OPTION_NAME", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DUP_OPTION_NAME:Int", "kind" : "val"}, {"label" : "DUP_OUTPUT_PORT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DUP_OUTPUT_PORT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DUP_OUTPUT_PORT:Int", "kind" : "val"}, {"label" : "DUP_INPUT_PORT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DUP_INPUT_PORT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DUP_INPUT_PORT:Int", "kind" : "val"}, {"label" : "UNEXPECTED_CARDINALITY", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.UNEXPECTED_CARDINALITY", "link" : "com\/jafpl\/exceptions\/JafplException$.html#UNEXPECTED_CARDINALITY:Int", "kind" : "val"}, {"label" : "INVALID_OUTPUTS", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_OUTPUTS", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_OUTPUTS:Int", "kind" : "val"}, {"label" : "INVALID_INPUTS", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INVALID_INPUTS", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INVALID_INPUTS:Int", "kind" : "val"}, {"label" : "BAD_LOOP_INPUT_PORT", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.BAD_LOOP_INPUT_PORT", "link" : "com\/jafpl\/exceptions\/JafplException$.html#BAD_LOOP_INPUT_PORT:Int", "kind" : "val"}, {"label" : "VARIABLE_BINDING_MISSING", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.VARIABLE_BINDING_MISSING", "link" : "com\/jafpl\/exceptions\/JafplException$.html#VARIABLE_BINDING_MISSING:Int", "kind" : "val"}, {"label" : "INPUT_PORT_MISSING", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.INPUT_PORT_MISSING", "link" : "com\/jafpl\/exceptions\/JafplException$.html#INPUT_PORT_MISSING:Int", "kind" : "val"}, {"label" : "VARNAME_NOT_IN_SCOPE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.VARNAME_NOT_IN_SCOPE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#VARNAME_NOT_IN_SCOPE:Int", "kind" : "val"}, {"label" : "DUP_PRIORITY_EDGE", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DUP_PRIORITY_EDGE", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DUP_PRIORITY_EDGE:Int", "kind" : "val"}, {"label" : "DIFF_GRAPHS", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DIFF_GRAPHS", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DIFF_GRAPHS:Int", "kind" : "val"}, {"label" : "DUP_CONTAINER_START", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.DUP_CONTAINER_START", "link" : "com\/jafpl\/exceptions\/JafplException$.html#DUP_CONTAINER_START:Int", "kind" : "val"}, {"label" : "BAD_CONTAINER_END", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.BAD_CONTAINER_END", "link" : "com\/jafpl\/exceptions\/JafplException$.html#BAD_CONTAINER_END:Int", "kind" : "val"}, {"label" : "CHILD_FORBIDDEN", "tail" : ": Int", "member" : "com.jafpl.exceptions.JafplException.CHILD_FORBIDDEN", "link" : "com\/jafpl\/exceptions\/JafplException$.html#CHILD_FORBIDDEN:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/JafplException$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/JafplException$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/JafplException$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/JafplException$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/JafplException$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/JafplException$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/JafplException$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplException$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/JafplException$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/JafplException$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/exceptions\/JafplException$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/JafplException$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/JafplException$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/JafplException$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/JafplException$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplException$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplException$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/exceptions\/JafplException.html", "kind" : "object"}, {"name" : "com.jafpl.exceptions.JafplExceptionCode", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "jafplExceptionCode", "tail" : "(): Any", "member" : "com.jafpl.exceptions.JafplExceptionCode.jafplExceptionCode", "link" : "com\/jafpl\/exceptions\/JafplExceptionCode.html#jafplExceptionCode:Any", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/jafpl\/exceptions\/JafplExceptionCode.html", "kind" : "trait"}], "com.jafpl.graph" : [{"name" : "com.jafpl.graph.AtomicNode", "shortDescription" : "An atomic node.", "members_class" : [{"member" : "com.jafpl.graph.AtomicNode#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.AtomicNode.userLabel", "link" : "com\/jafpl\/graph\/AtomicNode.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.AtomicNode.step", "link" : "com\/jafpl\/graph\/AtomicNode.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.AtomicNode.graph", "link" : "com\/jafpl\/graph\/AtomicNode.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/AtomicNode.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/AtomicNode.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/AtomicNode.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/AtomicNode.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/AtomicNode.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/AtomicNode.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/AtomicNode.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/AtomicNode.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/AtomicNode.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/AtomicNode.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/AtomicNode.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/AtomicNode.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/AtomicNode.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/AtomicNode.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/AtomicNode.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/AtomicNode.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/AtomicNode.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/AtomicNode.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/AtomicNode.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/AtomicNode.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/AtomicNode.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/AtomicNode.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/AtomicNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/AtomicNode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/AtomicNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/AtomicNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/AtomicNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/AtomicNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/AtomicNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/AtomicNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/AtomicNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/AtomicNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/AtomicNode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/AtomicNode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/AtomicNode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/AtomicNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/AtomicNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/AtomicNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/AtomicNode.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Binding", "shortDescription" : "A variable binding.", "members_class" : [{"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Binding.outputs", "link" : "com\/jafpl\/graph\/Binding.html#outputs:Set[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.toString", "link" : "com\/jafpl\/graph\/Binding.html#toString():String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.label", "link" : "com\/jafpl\/graph\/Binding.html#label:String", "kind" : "def"}, {"label" : "_label", "tail" : ": String", "member" : "com.jafpl.graph.Binding._label", "link" : "com\/jafpl\/graph\/Binding.html#_label:String", "kind" : "val"}, {"label" : "_start", "tail" : ": Option[ContainerStart]", "member" : "com.jafpl.graph.Binding._start", "link" : "com\/jafpl\/graph\/Binding.html#_start:Option[com.jafpl.graph.ContainerStart]", "kind" : "var"}, {"member" : "com.jafpl.graph.Binding#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.Binding.options", "link" : "com\/jafpl\/graph\/Binding.html#options:Option[Any]", "kind" : "val"}, {"label" : "staticValue", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.Binding.staticValue", "link" : "com\/jafpl\/graph\/Binding.html#staticValue:Option[Any]", "kind" : "val"}, {"label" : "expression", "tail" : ": Any", "member" : "com.jafpl.graph.Binding.expression", "link" : "com\/jafpl\/graph\/Binding.html#expression:Any", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.jafpl.graph.Binding.name", "link" : "com\/jafpl\/graph\/Binding.html#name:String", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.Binding.graph", "link" : "com\/jafpl\/graph\/Binding.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/Binding.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/Binding.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/Binding.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/Binding.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/Binding.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/Binding.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/Binding.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/Binding.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/Binding.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/Binding.html#bindings:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/Binding.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/Binding.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/Binding.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/Binding.html#internal_name:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/Binding.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/Binding.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/Binding.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/Binding.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/Binding.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/Binding.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/Binding.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.Node.userLabel", "link" : "com\/jafpl\/graph\/Binding.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/Binding.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Binding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Binding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Binding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Binding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Binding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Binding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Binding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Binding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Binding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Binding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Binding.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Binding.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Binding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Binding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Binding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Binding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Binding.html", "kind" : "class"}, {"name" : "com.jafpl.graph.CatchStart", "shortDescription" : "The catch block of a try catch.", "members_class" : [{"label" : "codes", "tail" : ": List[Any]", "member" : "com.jafpl.graph.CatchStart.codes", "link" : "com\/jafpl\/graph\/CatchStart.html#codes:List[Any]", "kind" : "val"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.CatchStart.userLabel", "link" : "com\/jafpl\/graph\/CatchStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.CatchStart.end", "link" : "com\/jafpl\/graph\/CatchStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.CatchStart.graph", "link" : "com\/jafpl\/graph\/CatchStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/CatchStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/CatchStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/CatchStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/CatchStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/CatchStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/CatchStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/CatchStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/CatchStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/CatchStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/CatchStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/CatchStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/CatchStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/CatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/CatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/CatchStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/CatchStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/CatchStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/CatchStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/CatchStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/CatchStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/CatchStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/CatchStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/CatchStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/CatchStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/CatchStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/CatchStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/CatchStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/CatchStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/CatchStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/CatchStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/CatchStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/CatchStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/CatchStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/CatchStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/CatchStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/CatchStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/CatchStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/CatchStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/CatchStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/CatchStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/CatchStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/CatchStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/CatchStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/CatchStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/CatchStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/CatchStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/CatchStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/CatchStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/CatchStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/CatchStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/CatchStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/CatchStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/CatchStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/CatchStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/CatchStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/CatchStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/CatchStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/CatchStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/CatchStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/CatchStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/CatchStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/CatchStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.ChooseStart", "shortDescription" : "A choose container.", "members_class" : [{"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ChooseStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ChooseStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ChooseStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ChooseStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ChooseStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ChooseStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: Any, label: Option[String]): WhenStart", "member" : "com.jafpl.graph.ChooseStart.addWhen", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhen(expression:Any,label:Option[String]):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: Any, label: String): WhenStart", "member" : "com.jafpl.graph.ChooseStart.addWhen", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhen(expression:Any,label:String):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.ChooseStart.userLabel", "link" : "com\/jafpl\/graph\/ChooseStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.ChooseStart.end", "link" : "com\/jafpl\/graph\/ChooseStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.ChooseStart.graph", "link" : "com\/jafpl\/graph\/ChooseStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/ChooseStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/ChooseStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/ChooseStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/ChooseStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/ChooseStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ChooseStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ChooseStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ChooseStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ChooseStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ChooseStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ChooseStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ChooseStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ChooseStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ChooseStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ChooseStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ChooseStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/ChooseStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/ChooseStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/ChooseStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/ChooseStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/ChooseStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/ChooseStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/ChooseStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/ChooseStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/ChooseStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/ChooseStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/ChooseStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/ChooseStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/ChooseStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/ChooseStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/ChooseStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/ChooseStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/ChooseStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/ChooseStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/ChooseStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/ChooseStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/ChooseStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/ChooseStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/ChooseStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/ChooseStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/ChooseStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/ChooseStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/ChooseStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/ChooseStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/ChooseStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/ChooseStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ChooseStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/ChooseStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/ChooseStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/ChooseStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/ChooseStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/ChooseStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/ChooseStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/ChooseStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/ChooseStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/ChooseStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.ContainerStart", "shortDescription" : "A node that contains other nodes.", "members_class" : [{"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/ContainerStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/ContainerStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/ContainerStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/ContainerStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/ContainerStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ContainerStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ContainerStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/ContainerStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/ContainerStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/ContainerStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/ContainerStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/ContainerStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/ContainerStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/ContainerStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/ContainerStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/ContainerStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/ContainerStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/ContainerStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/ContainerStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"member" : "com.jafpl.graph.ContainerStart#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.ContainerStart.userLabel", "link" : "com\/jafpl\/graph\/ContainerStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.end", "link" : "com\/jafpl\/graph\/ContainerStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.ContainerStart.graph", "link" : "com\/jafpl\/graph\/ContainerStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/ContainerStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/ContainerStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/ContainerStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/ContainerStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/ContainerStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/ContainerStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/ContainerStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/ContainerStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/ContainerStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/ContainerStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/ContainerStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/ContainerStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/ContainerStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/ContainerStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/ContainerStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/ContainerStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/ContainerStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/ContainerStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/ContainerStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/ContainerStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/ContainerStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/ContainerStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/ContainerStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/ContainerStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/ContainerStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/ContainerStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/ContainerStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/ContainerStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/ContainerStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/ContainerStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/ContainerStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/ContainerStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/ContainerStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/ContainerStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/ContainerStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/ContainerStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/ContainerStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.FinallyStart", "shortDescription" : "The catch block of a try catch.", "members_class" : [{"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.FinallyStart.userLabel", "link" : "com\/jafpl\/graph\/FinallyStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.FinallyStart.end", "link" : "com\/jafpl\/graph\/FinallyStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.FinallyStart.graph", "link" : "com\/jafpl\/graph\/FinallyStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/FinallyStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/FinallyStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/FinallyStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/FinallyStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/FinallyStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/FinallyStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/FinallyStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/FinallyStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/FinallyStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/FinallyStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/FinallyStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/FinallyStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/FinallyStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/FinallyStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/FinallyStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/FinallyStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/FinallyStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/FinallyStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/FinallyStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/FinallyStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/FinallyStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/FinallyStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/FinallyStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/FinallyStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/FinallyStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/FinallyStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/FinallyStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/FinallyStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/FinallyStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/FinallyStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/FinallyStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/FinallyStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/FinallyStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/FinallyStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/FinallyStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/FinallyStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/FinallyStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/FinallyStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/FinallyStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/FinallyStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/FinallyStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/FinallyStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/FinallyStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/FinallyStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/FinallyStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/FinallyStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/FinallyStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/FinallyStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/FinallyStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/FinallyStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/FinallyStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/FinallyStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/FinallyStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/FinallyStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/FinallyStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/FinallyStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/FinallyStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/FinallyStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/FinallyStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/FinallyStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/FinallyStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/FinallyStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/FinallyStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/FinallyStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/FinallyStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/FinallyStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/FinallyStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/FinallyStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/FinallyStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/FinallyStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/FinallyStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/FinallyStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/FinallyStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/FinallyStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/FinallyStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/FinallyStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/FinallyStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Graph", "shortDescription" : "A pipeline graph.", "members_class" : [{"label" : "asXML", "tail" : "(): Elem", "member" : "com.jafpl.graph.Graph.asXML", "link" : "com\/jafpl\/graph\/Graph.html#asXML:scala.xml.Elem", "kind" : "def"}, {"label" : "dump", "tail" : "(): Unit", "member" : "com.jafpl.graph.Graph.dump", "link" : "com\/jafpl\/graph\/Graph.html#dump():Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.jafpl.graph.Graph.close", "link" : "com\/jafpl\/graph\/Graph.html#close():Unit", "kind" : "def"}, {"label" : "edgesTo", "tail" : "(node: Node, port: String): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesTo", "link" : "com\/jafpl\/graph\/Graph.html#edgesTo(node:com.jafpl.graph.Node,port:String):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "hasEdgeFrom", "tail" : "(node: Node, port: String): Boolean", "member" : "com.jafpl.graph.Graph.hasEdgeFrom", "link" : "com\/jafpl\/graph\/Graph.html#hasEdgeFrom(node:com.jafpl.graph.Node,port:String):Boolean", "kind" : "def"}, {"label" : "edgesFrom", "tail" : "(node: Node, port: String): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesFrom", "link" : "com\/jafpl\/graph\/Graph.html#edgesFrom(node:com.jafpl.graph.Node,port:String):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "edgesFrom", "tail" : "(node: Node): List[Edge]", "member" : "com.jafpl.graph.Graph.edgesFrom", "link" : "com\/jafpl\/graph\/Graph.html#edgesFrom(node:com.jafpl.graph.Node):List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "edges", "tail" : "(): List[Edge]", "member" : "com.jafpl.graph.Graph.edges", "link" : "com\/jafpl\/graph\/Graph.html#edges:List[com.jafpl.graph.Edge]", "kind" : "def"}, {"label" : "bindings", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.bindings", "link" : "com\/jafpl\/graph\/Graph.html#bindings(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "outboundPorts", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.outboundPorts", "link" : "com\/jafpl\/graph\/Graph.html#outboundPorts(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "inboundPorts", "tail" : "(node: Node): Set[String]", "member" : "com.jafpl.graph.Graph.inboundPorts", "link" : "com\/jafpl\/graph\/Graph.html#inboundPorts(node:com.jafpl.graph.Node):Set[String]", "kind" : "def"}, {"label" : "addDependsEdge", "tail" : "(from: Node, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addDependsEdge", "link" : "com\/jafpl\/graph\/Graph.html#addDependsEdge(from:com.jafpl.graph.Node,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addBindingEdge", "tail" : "(from: Binding, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addBindingEdge", "link" : "com\/jafpl\/graph\/Graph.html#addBindingEdge(from:com.jafpl.graph.Binding,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addBindingEdge", "tail" : "(varname: String, to: Node): Unit", "member" : "com.jafpl.graph.Graph.addBindingEdge", "link" : "com\/jafpl\/graph\/Graph.html#addBindingEdge(varname:String,to:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "addPriorityEdge", "tail" : "(from: Node, fromName: String, to: Node, toName: String): Unit", "member" : "com.jafpl.graph.Graph.addPriorityEdge", "link" : "com\/jafpl\/graph\/Graph.html#addPriorityEdge(from:com.jafpl.graph.Node,fromName:String,to:com.jafpl.graph.Node,toName:String):Unit", "kind" : "def"}, {"label" : "addOrderedEdge", "tail" : "(from: Node, fromName: String, to: Node, toName: String): Unit", "member" : "com.jafpl.graph.Graph.addOrderedEdge", "link" : "com\/jafpl\/graph\/Graph.html#addOrderedEdge(from:com.jafpl.graph.Node,fromName:String,to:com.jafpl.graph.Node,toName:String):Unit", "kind" : "def"}, {"label" : "addEdge", "tail" : "(from: Node, fromName: String, to: Node, toName: String): Unit", "member" : "com.jafpl.graph.Graph.addEdge", "link" : "com\/jafpl\/graph\/Graph.html#addEdge(from:com.jafpl.graph.Node,fromName:String,to:com.jafpl.graph.Node,toName:String):Unit", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Option[Any]): Binding", "member" : "com.jafpl.graph.Graph.addVariable", "link" : "com\/jafpl\/graph\/Graph.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.Graph.addEmptySource", "link" : "com\/jafpl\/graph\/Graph.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.Graph.addSink", "link" : "com\/jafpl\/graph\/Graph.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.Graph.addJoiner", "link" : "com\/jafpl\/graph\/Graph.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(): Joiner", "member" : "com.jafpl.graph.Graph.addJoiner", "link" : "com\/jafpl\/graph\/Graph.html#addJoiner():com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.Graph.addSplitter", "link" : "com\/jafpl\/graph\/Graph.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addFinally", "tail" : "(label: Option[String]): FinallyStart", "member" : "com.jafpl.graph.Graph.addFinally", "link" : "com\/jafpl\/graph\/Graph.html#addFinally(label:Option[String]):com.jafpl.graph.FinallyStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: Option[String], codes: List[Any]): CatchStart", "member" : "com.jafpl.graph.Graph.addCatch", "link" : "com\/jafpl\/graph\/Graph.html#addCatch(label:Option[String],codes:List[Any]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: Option[String]): TryStart", "member" : "com.jafpl.graph.Graph.addTry", "link" : "com\/jafpl\/graph\/Graph.html#addTry(label:Option[String]):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.Graph.addTryCatch", "link" : "com\/jafpl\/graph\/Graph.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.Graph.addViewport", "link" : "com\/jafpl\/graph\/Graph.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.Graph.addFor", "link" : "com\/jafpl\/graph\/Graph.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.Graph.addUntil", "link" : "com\/jafpl\/graph\/Graph.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.Graph.addWhile", "link" : "com\/jafpl\/graph\/Graph.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.Graph.addForEach", "link" : "com\/jafpl\/graph\/Graph.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addWhen", "tail" : "(expression: Any, label: Option[String]): WhenStart", "member" : "com.jafpl.graph.Graph.addWhen", "link" : "com\/jafpl\/graph\/Graph.html#addWhen(expression:Any,label:Option[String]):com.jafpl.graph.WhenStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.Graph.addChoose", "link" : "com\/jafpl\/graph\/Graph.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.Graph.addGroup", "link" : "com\/jafpl\/graph\/Graph.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.Graph.addAtomic", "link" : "com\/jafpl\/graph\/Graph.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Option[Any]): OptionBinding", "member" : "com.jafpl.graph.Graph.addOption", "link" : "com\/jafpl\/graph\/Graph.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Option[Any]):com.jafpl.graph.OptionBinding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): OptionBinding", "member" : "com.jafpl.graph.Graph.addOption", "link" : "com\/jafpl\/graph\/Graph.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.OptionBinding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): OptionBinding", "member" : "com.jafpl.graph.Graph.addOption", "link" : "com\/jafpl\/graph\/Graph.html#addOption(name:String,expression:Any):com.jafpl.graph.OptionBinding", "kind" : "def"}, {"label" : "addOutput", "tail" : "(node: Node, port: String): Unit", "member" : "com.jafpl.graph.Graph.addOutput", "link" : "com\/jafpl\/graph\/Graph.html#addOutput(node:com.jafpl.graph.Node,port:String):Unit", "kind" : "def"}, {"label" : "addInput", "tail" : "(node: Node, port: String): Unit", "member" : "com.jafpl.graph.Graph.addInput", "link" : "com\/jafpl\/graph\/Graph.html#addInput(node:com.jafpl.graph.Node,port:String):Unit", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(label: Option[String]): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline(label:Option[String]):com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(label: String): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline(label:String):com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "addPipeline", "tail" : "(): PipelineStart", "member" : "com.jafpl.graph.Graph.addPipeline", "link" : "com\/jafpl\/graph\/Graph.html#addPipeline():com.jafpl.graph.PipelineStart", "kind" : "def"}, {"label" : "valid", "tail" : "(): Boolean", "member" : "com.jafpl.graph.Graph.valid", "link" : "com\/jafpl\/graph\/Graph.html#valid:Boolean", "kind" : "def"}, {"label" : "nodes", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.Graph.nodes", "link" : "com\/jafpl\/graph\/Graph.html#nodes:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "error", "tail" : "(cause: Throwable): Unit", "member" : "com.jafpl.graph.Graph.error", "link" : "com\/jafpl\/graph\/Graph.html#error(cause:Throwable):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Graph.logger", "link" : "com\/jafpl\/graph\/Graph.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.graph.Graph#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/Graph.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Graph.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Graph.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Graph.html", "kind" : "class"}, {"name" : "com.jafpl.graph.JoinMode", "shortDescription" : "", "object" : "com\/jafpl\/graph\/JoinMode$.html", "members_object" : [{"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "com\/jafpl\/graph\/JoinMode$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "com\/jafpl\/graph\/JoinMode$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "com\/jafpl\/graph\/JoinMode$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "PRIORITY", "tail" : ": Value", "member" : "com.jafpl.graph.JoinMode.PRIORITY", "link" : "com\/jafpl\/graph\/JoinMode$.html#PRIORITY:com.jafpl.graph.JoinMode.Value", "kind" : "val"}, {"label" : "ORDERED", "tail" : ": Value", "member" : "com.jafpl.graph.JoinMode.ORDERED", "link" : "com\/jafpl\/graph\/JoinMode$.html#ORDERED:com.jafpl.graph.JoinMode.Value", "kind" : "val"}, {"label" : "MIXED", "tail" : ": Value", "member" : "com.jafpl.graph.JoinMode.MIXED", "link" : "com\/jafpl\/graph\/JoinMode$.html#MIXED:com.jafpl.graph.JoinMode.Value", "kind" : "val"}, {"label" : "JoinMode", "tail" : "", "member" : "com.jafpl.graph.JoinMode.JoinMode", "link" : "com\/jafpl\/graph\/JoinMode$.html#JoinMode=com.jafpl.graph.JoinMode.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "com\/jafpl\/graph\/JoinMode$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "com\/jafpl\/graph\/JoinMode$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "com\/jafpl\/graph\/JoinMode$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "com\/jafpl\/graph\/JoinMode$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "com\/jafpl\/graph\/JoinMode$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "com\/jafpl\/graph\/JoinMode$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "com\/jafpl\/graph\/JoinMode$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "com\/jafpl\/graph\/JoinMode$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "com\/jafpl\/graph\/JoinMode$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "com\/jafpl\/graph\/JoinMode$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "com\/jafpl\/graph\/JoinMode$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "com\/jafpl\/graph\/JoinMode$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/JoinMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/JoinMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/JoinMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/JoinMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/JoinMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/JoinMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/JoinMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/JoinMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/JoinMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/JoinMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/JoinMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/JoinMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/JoinMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/JoinMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/JoinMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/JoinMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/JoinMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/JoinMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.jafpl.graph.Location", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Location.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Location.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Location.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Location.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Location.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Location.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Location.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Location.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Location.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Location.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/Location.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Location.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Location.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Location.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Location.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Location.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Location.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "column", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.Location.column", "link" : "com\/jafpl\/graph\/Location.html#column:Option[Long]", "kind" : "abstract def"}, {"label" : "line", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.Location.line", "link" : "com\/jafpl\/graph\/Location.html#line:Option[Long]", "kind" : "abstract def"}, {"label" : "uri", "tail" : "(): Option[String]", "member" : "com.jafpl.graph.Location.uri", "link" : "com\/jafpl\/graph\/Location.html#uri:Option[String]", "kind" : "abstract def"}], "shortDescription" : "A location.", "trait" : "com\/jafpl\/graph\/Location.html", "kind" : "trait"}, {"name" : "com.jafpl.graph.LoopEachStart", "shortDescription" : "A for-each container.", "members_class" : [{"label" : "inputsOk", "tail" : "(): Boolean", "member" : "com.jafpl.graph.LoopEachStart.inputsOk", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputsOk():Boolean", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.LoopEachStart.userLabel", "link" : "com\/jafpl\/graph\/LoopEachStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.LoopEachStart.end", "link" : "com\/jafpl\/graph\/LoopEachStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.LoopEachStart.graph", "link" : "com\/jafpl\/graph\/LoopEachStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/LoopEachStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/LoopEachStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/LoopEachStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/LoopEachStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/LoopEachStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/LoopEachStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/LoopEachStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/LoopEachStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/LoopEachStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/LoopEachStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/LoopEachStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/LoopEachStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/LoopEachStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/LoopEachStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/LoopEachStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/LoopEachStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/LoopEachStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/LoopEachStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/LoopEachStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/LoopEachStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/LoopEachStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/LoopEachStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/LoopEachStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/LoopEachStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/LoopEachStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/LoopEachStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopEachStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/LoopEachStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/LoopEachStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/LoopEachStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/LoopEachStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/LoopEachStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/LoopEachStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/LoopEachStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/LoopEachStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/LoopEachStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.LoopStart", "shortDescription" : "A looping container.", "members_class" : [{"member" : "com.jafpl.graph.LoopStart#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.LoopStart.userLabel", "link" : "com\/jafpl\/graph\/LoopStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.LoopStart.end", "link" : "com\/jafpl\/graph\/LoopStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.LoopStart.graph", "link" : "com\/jafpl\/graph\/LoopStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/LoopStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/LoopStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/LoopStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/LoopStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/LoopStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/LoopStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/LoopStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/LoopStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/LoopStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/LoopStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/LoopStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/LoopStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/LoopStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/LoopStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/LoopStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/LoopStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/LoopStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/LoopStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/LoopStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/LoopStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/LoopStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/LoopStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/LoopStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/LoopStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/LoopStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/LoopStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/LoopStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/LoopStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/LoopStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/LoopStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/LoopStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/LoopStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/LoopStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/LoopStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/LoopStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/LoopStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/LoopStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/LoopStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/LoopStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/LoopStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/LoopStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/LoopStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/LoopStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/LoopStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/LoopStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/LoopStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/LoopStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/LoopStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/LoopStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/LoopStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/LoopStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/LoopStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/LoopStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/LoopStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/LoopStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/LoopStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/LoopStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/LoopStart.html", "kind" : "class"}, {"name" : "com.jafpl.graph.Node", "shortDescription" : "A node in the pipeline graph.", "members_class" : [{"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/Node.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/Node.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/Node.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/Node.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/Node.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/Node.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/Node.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/Node.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/Node.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/Node.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/Node.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/Node.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/Node.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/Node.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/Node.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/Node.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/Node.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/Node.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/Node.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/Node.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/Node.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/Node.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/Node.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/Node.html#logger:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.jafpl.graph.Node#<init>", "error" : "unsupported entity"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.Node.userLabel", "link" : "com\/jafpl\/graph\/Node.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/Node.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.Node.graph", "link" : "com\/jafpl\/graph\/Node.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/Node.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/Node.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/Node.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/Node.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/Node.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/Node.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/Node.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/Node.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/Node.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/Node.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/Node.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/Node.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/Node.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/Node.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/Node.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/Node.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/Node.html", "kind" : "class"}, {"name" : "com.jafpl.graph.NodeLocation", "shortDescription" : "", "object" : "com\/jafpl\/graph\/NodeLocation$.html", "members_class" : [{"label" : "column", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.NodeLocation.column", "link" : "com\/jafpl\/graph\/NodeLocation.html#column:Option[Long]", "kind" : "def"}, {"label" : "line", "tail" : "(): Option[Long]", "member" : "com.jafpl.graph.NodeLocation.line", "link" : "com\/jafpl\/graph\/NodeLocation.html#line:Option[Long]", "kind" : "def"}, {"label" : "uri", "tail" : "(): Option[String]", "member" : "com.jafpl.graph.NodeLocation.uri", "link" : "com\/jafpl\/graph\/NodeLocation.html#uri:Option[String]", "kind" : "def"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"member" : "com.jafpl.graph.NodeLocation#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/NodeLocation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/NodeLocation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/NodeLocation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/NodeLocation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/NodeLocation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/NodeLocation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/NodeLocation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/NodeLocation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/NodeLocation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/NodeLocation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/NodeLocation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/NodeLocation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/NodeLocation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/NodeLocation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UNKNOWN", "tail" : ": NodeLocation", "member" : "com.jafpl.graph.NodeLocation.UNKNOWN", "link" : "com\/jafpl\/graph\/NodeLocation$.html#UNKNOWN:com.jafpl.graph.NodeLocation", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/NodeLocation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/NodeLocation$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/NodeLocation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/NodeLocation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/NodeLocation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/NodeLocation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/NodeLocation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/NodeLocation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/NodeLocation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/NodeLocation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/graph\/NodeLocation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/NodeLocation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/NodeLocation$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/NodeLocation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/NodeLocation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/NodeLocation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/NodeLocation.html", "kind" : "object"}, {"name" : "com.jafpl.graph.OptionBinding", "shortDescription" : "An option binding.", "members_class" : [{"label" : "value_=", "tail" : "(value: Any): Unit", "member" : "com.jafpl.graph.OptionBinding.value_=", "link" : "com\/jafpl\/graph\/OptionBinding.html#value_=(value:Any):Unit", "kind" : "def"}, {"label" : "value", "tail" : "(): Option[Any]", "member" : "com.jafpl.graph.OptionBinding.value", "link" : "com\/jafpl\/graph\/OptionBinding.html#value:Option[Any]", "kind" : "def"}, {"label" : "_value", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.OptionBinding._value", "link" : "com\/jafpl\/graph\/OptionBinding.html#_value:Option[Any]", "kind" : "var"}, {"member" : "com.jafpl.graph.OptionBinding#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.OptionBinding.options", "link" : "com\/jafpl\/graph\/OptionBinding.html#options:Option[Any]", "kind" : "val"}, {"label" : "staticValue", "tail" : ": Option[Any]", "member" : "com.jafpl.graph.OptionBinding.staticValue", "link" : "com\/jafpl\/graph\/OptionBinding.html#staticValue:Option[Any]", "kind" : "val"}, {"label" : "expression", "tail" : ": Any", "member" : "com.jafpl.graph.OptionBinding.expression", "link" : "com\/jafpl\/graph\/OptionBinding.html#expression:Any", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.jafpl.graph.OptionBinding.name", "link" : "com\/jafpl\/graph\/OptionBinding.html#name:String", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.OptionBinding.graph", "link" : "com\/jafpl\/graph\/OptionBinding.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Binding.outputs", "link" : "com\/jafpl\/graph\/OptionBinding.html#outputs:Set[String]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.toString", "link" : "com\/jafpl\/graph\/OptionBinding.html#toString():String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Binding.label", "link" : "com\/jafpl\/graph\/OptionBinding.html#label:String", "kind" : "def"}, {"label" : "_label", "tail" : ": String", "member" : "com.jafpl.graph.Binding._label", "link" : "com\/jafpl\/graph\/OptionBinding.html#_label:String", "kind" : "val"}, {"label" : "_start", "tail" : ": Option[ContainerStart]", "member" : "com.jafpl.graph.Binding._start", "link" : "com\/jafpl\/graph\/OptionBinding.html#_start:Option[com.jafpl.graph.ContainerStart]", "kind" : "var"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/OptionBinding.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.Node.dumpChildren", "link" : "com\/jafpl\/graph\/OptionBinding.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/OptionBinding.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/OptionBinding.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/OptionBinding.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/OptionBinding.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/OptionBinding.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/OptionBinding.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/OptionBinding.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/OptionBinding.html#bindings:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/OptionBinding.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/OptionBinding.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/OptionBinding.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/OptionBinding.html#internal_name:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/OptionBinding.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/OptionBinding.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/OptionBinding.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/OptionBinding.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/OptionBinding.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/OptionBinding.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/OptionBinding.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.Node.userLabel", "link" : "com\/jafpl\/graph\/OptionBinding.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/OptionBinding.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/OptionBinding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/OptionBinding.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/OptionBinding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/OptionBinding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/OptionBinding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/OptionBinding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/OptionBinding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/OptionBinding.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/OptionBinding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/OptionBinding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/OptionBinding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/OptionBinding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/OptionBinding.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/OptionBinding.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/OptionBinding.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/OptionBinding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/OptionBinding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/OptionBinding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/OptionBinding.html", "kind" : "class"}, {"name" : "com.jafpl.graph.TryCatchStart", "shortDescription" : "", "members_class" : [{"label" : "addTryCatch", "tail" : "(label: Option[String]): TryCatchStart", "member" : "com.jafpl.graph.TryCatchStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch(label:Option[String]):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: Option[String]): ViewportStart", "member" : "com.jafpl.graph.TryCatchStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:Option[String]):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: Option[String]): LoopEachStart", "member" : "com.jafpl.graph.TryCatchStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach(label:Option[String]):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: Option[String]): ChooseStart", "member" : "com.jafpl.graph.TryCatchStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose(label:Option[String]):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: Option[String]): ContainerStart", "member" : "com.jafpl.graph.TryCatchStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup(label:Option[String]):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: Option[String]): Node", "member" : "com.jafpl.graph.TryCatchStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:Option[String]):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addFinally", "tail" : "(label: String): FinallyStart", "member" : "com.jafpl.graph.TryCatchStart.addFinally", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFinally(label:String):com.jafpl.graph.FinallyStart", "kind" : "def"}, {"label" : "addFinally", "tail" : "(label: Option[String]): FinallyStart", "member" : "com.jafpl.graph.TryCatchStart.addFinally", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFinally(label:Option[String]):com.jafpl.graph.FinallyStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String, codes: List[Any]): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String,codes:List[Any]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String, code: Any): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String,code:Any):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: String): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:String):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addCatch", "tail" : "(label: Option[String], codes: List[Any]): CatchStart", "member" : "com.jafpl.graph.TryCatchStart.addCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addCatch(label:Option[String],codes:List[Any]):com.jafpl.graph.CatchStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: Option[String]): TryStart", "member" : "com.jafpl.graph.TryCatchStart.addTry", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTry(label:Option[String]):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "addTry", "tail" : "(label: String): TryStart", "member" : "com.jafpl.graph.TryCatchStart.addTry", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTry(label:String):com.jafpl.graph.TryStart", "kind" : "def"}, {"label" : "userLabel", "tail" : ": Option[String]", "member" : "com.jafpl.graph.TryCatchStart.userLabel", "link" : "com\/jafpl\/graph\/TryCatchStart.html#userLabel:Option[String]", "kind" : "val"}, {"label" : "end", "tail" : ": ContainerEnd", "member" : "com.jafpl.graph.TryCatchStart.end", "link" : "com\/jafpl\/graph\/TryCatchStart.html#end:com.jafpl.graph.ContainerEnd", "kind" : "val"}, {"label" : "graph", "tail" : ": Graph", "member" : "com.jafpl.graph.TryCatchStart.graph", "link" : "com\/jafpl\/graph\/TryCatchStart.html#graph:com.jafpl.graph.Graph", "kind" : "val"}, {"label" : "dumpChildren", "tail" : "(depth: Int): scala.xml.Node", "member" : "com.jafpl.graph.ContainerStart.dumpChildren", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dumpChildren(depth:Int):scala.xml.Node", "kind" : "def"}, {"label" : "addEmptySource", "tail" : "(): EmptySource", "member" : "com.jafpl.graph.ContainerStart.addEmptySource", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addEmptySource():com.jafpl.graph.EmptySource", "kind" : "def"}, {"label" : "addSink", "tail" : "(): Sink", "member" : "com.jafpl.graph.ContainerStart.addSink", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addSink():com.jafpl.graph.Sink", "kind" : "def"}, {"label" : "addJoiner", "tail" : "(mode: JoinMode): Joiner", "member" : "com.jafpl.graph.ContainerStart.addJoiner", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addJoiner(mode:com.jafpl.graph.JoinMode.JoinMode):com.jafpl.graph.Joiner", "kind" : "def"}, {"label" : "addSplitter", "tail" : "(): Splitter", "member" : "com.jafpl.graph.ContainerStart.addSplitter", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addSplitter():com.jafpl.graph.Splitter", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addVariable(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addVariable", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addVariable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addVariable(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any], options: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addOption(name:String,expression:Any,staticValue:Option[Any],options:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any, staticValue: Option[Any]): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addOption(name:String,expression:Any,staticValue:Option[Any]):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addOption", "tail" : "(name: String, expression: Any): Binding", "member" : "com.jafpl.graph.ContainerStart.addOption", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addOption(name:String,expression:Any):com.jafpl.graph.Binding", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(label: String): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch(label:String):com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addTryCatch", "tail" : "(): TryCatchStart", "member" : "com.jafpl.graph.ContainerStart.addTryCatch", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addTryCatch():com.jafpl.graph.TryCatchStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer, label: String): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer,label:String):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addViewport", "tail" : "(composer: ViewportComposer): ViewportStart", "member" : "com.jafpl.graph.ContainerStart.addViewport", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addViewport(composer:com.jafpl.steps.ViewportComposer):com.jafpl.graph.ViewportStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: Option[String]): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:Option[String]):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator, label: String): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator,label:String):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addUntil", "tail" : "(comparator: ItemComparator): LoopUntilStart", "member" : "com.jafpl.graph.ContainerStart.addUntil", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addUntil(comparator:com.jafpl.util.ItemComparator):com.jafpl.graph.LoopUntilStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: Option[String]): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:Option[String]):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester, label: String): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester,label:String):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addWhile", "tail" : "(tester: ItemTester): LoopWhileStart", "member" : "com.jafpl.graph.ContainerStart.addWhile", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addWhile(tester:com.jafpl.util.ItemTester):com.jafpl.graph.LoopWhileStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: Option[String], countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(label:Option[String],countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(label:String,countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long, countBy: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(countFrom:Long,countTo:Long,countBy:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(label:String,countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countFrom: Long, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(countFrom:Long,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(label: String, countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(label:String,countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addFor", "tail" : "(countTo: Long): LoopForStart", "member" : "com.jafpl.graph.ContainerStart.addFor", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addFor(countTo:Long):com.jafpl.graph.LoopForStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(label: String): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach(label:String):com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addForEach", "tail" : "(): LoopEachStart", "member" : "com.jafpl.graph.ContainerStart.addForEach", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addForEach():com.jafpl.graph.LoopEachStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(label: String): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose(label:String):com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addChoose", "tail" : "(): ChooseStart", "member" : "com.jafpl.graph.ContainerStart.addChoose", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChoose():com.jafpl.graph.ChooseStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(label: String): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup(label:String):com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addGroup", "tail" : "(): ContainerStart", "member" : "com.jafpl.graph.ContainerStart.addGroup", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addGroup():com.jafpl.graph.ContainerStart", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step, label: String): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step,label:String):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addAtomic", "tail" : "(step: Step): Node", "member" : "com.jafpl.graph.ContainerStart.addAtomic", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addAtomic(step:com.jafpl.steps.Step):com.jafpl.graph.Node", "kind" : "def"}, {"label" : "addChild", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.ContainerStart.addChild", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addChild(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "containerEnd", "tail" : "(): ContainerEnd", "member" : "com.jafpl.graph.ContainerStart.containerEnd", "link" : "com\/jafpl\/graph\/TryCatchStart.html#containerEnd:com.jafpl.graph.ContainerEnd", "kind" : "def"}, {"label" : "children", "tail" : "(): List[Node]", "member" : "com.jafpl.graph.ContainerStart.children", "link" : "com\/jafpl\/graph\/TryCatchStart.html#children:List[com.jafpl.graph.Node]", "kind" : "def"}, {"label" : "dump", "tail" : "(depth: Int): Elem", "member" : "com.jafpl.graph.Node.dump", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dump(depth:Int):scala.xml.Elem", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.graph.Node.toString", "link" : "com\/jafpl\/graph\/TryCatchStart.html#toString():String", "kind" : "def"}, {"label" : "addStepInjectable", "tail" : "(injectable: StepInjectable): Unit", "member" : "com.jafpl.graph.Node.addStepInjectable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addStepInjectable(injectable:com.jafpl.injection.StepInjectable):Unit", "kind" : "def"}, {"label" : "addOutputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addOutputInjectable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addOutputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "addInputInjectable", "tail" : "(injectable: PortInjectable): Unit", "member" : "com.jafpl.graph.Node.addInputInjectable", "link" : "com\/jafpl\/graph\/TryCatchStart.html#addInputInjectable(injectable:com.jafpl.injection.PortInjectable):Unit", "kind" : "def"}, {"label" : "parent", "tail" : "(): Option[ContainerStart]", "member" : "com.jafpl.graph.Node.parent", "link" : "com\/jafpl\/graph\/TryCatchStart.html#parent:Option[com.jafpl.graph.ContainerStart]", "kind" : "def"}, {"label" : "hasOutputEdge", "tail" : "(port: String): Boolean", "member" : "com.jafpl.graph.Node.hasOutputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#hasOutputEdge(port:String):Boolean", "kind" : "def"}, {"label" : "outputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.outputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#outputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "inputEdge", "tail" : "(port: String): Edge", "member" : "com.jafpl.graph.Node.inputEdge", "link" : "com\/jafpl\/graph\/TryCatchStart.html#inputEdge(port:String):com.jafpl.graph.Edge", "kind" : "def"}, {"label" : "bindings", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.bindings", "link" : "com\/jafpl\/graph\/TryCatchStart.html#bindings:Set[String]", "kind" : "def"}, {"label" : "outputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.outputs", "link" : "com\/jafpl\/graph\/TryCatchStart.html#outputs:Set[String]", "kind" : "def"}, {"label" : "inputs", "tail" : "(): Set[String]", "member" : "com.jafpl.graph.Node.inputs", "link" : "com\/jafpl\/graph\/TryCatchStart.html#inputs:Set[String]", "kind" : "def"}, {"label" : "dependsOn", "tail" : "(node: Node): Unit", "member" : "com.jafpl.graph.Node.dependsOn", "link" : "com\/jafpl\/graph\/TryCatchStart.html#dependsOn(node:com.jafpl.graph.Node):Unit", "kind" : "def"}, {"label" : "internal_name_=", "tail" : "(newname: String): Unit", "member" : "com.jafpl.graph.Node.internal_name_=", "link" : "com\/jafpl\/graph\/TryCatchStart.html#internal_name_=(newname:String):Unit", "kind" : "def"}, {"label" : "internal_name", "tail" : "(): String", "member" : "com.jafpl.graph.Node.internal_name", "link" : "com\/jafpl\/graph\/TryCatchStart.html#internal_name:String", "kind" : "def"}, {"label" : "label", "tail" : "(): String", "member" : "com.jafpl.graph.Node.label", "link" : "com\/jafpl\/graph\/TryCatchStart.html#label:String", "kind" : "def"}, {"label" : "location_=", "tail" : "(loc: Location): Unit", "member" : "com.jafpl.graph.Node.location_=", "link" : "com\/jafpl\/graph\/TryCatchStart.html#location_=(loc:com.jafpl.graph.Location):Unit", "kind" : "def"}, {"label" : "location", "tail" : "(): Option[Location]", "member" : "com.jafpl.graph.Node.location", "link" : "com\/jafpl\/graph\/TryCatchStart.html#location:Option[com.jafpl.graph.Location]", "kind" : "def"}, {"label" : "id", "tail" : ": String", "member" : "com.jafpl.graph.Node.id", "link" : "com\/jafpl\/graph\/TryCatchStart.html#id:String", "kind" : "val"}, {"label" : "stepInjectables", "tail" : ": ListBuffer[StepInjectable]", "member" : "com.jafpl.graph.Node.stepInjectables", "link" : "com\/jafpl\/graph\/TryCatchStart.html#stepInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.StepInjectable]", "kind" : "val"}, {"label" : "outputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.outputInjectables", "link" : "com\/jafpl\/graph\/TryCatchStart.html#outputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "inputInjectables", "tail" : ": ListBuffer[PortInjectable]", "member" : "com.jafpl.graph.Node.inputInjectables", "link" : "com\/jafpl\/graph\/TryCatchStart.html#inputInjectables:scala.collection.mutable.ListBuffer[com.jafpl.injection.PortInjectable]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.jafpl.graph.Node.logger", "link" : "com\/jafpl\/graph\/TryCatchStart.html#logger:org.slf4j.Logger", "kind" : "val"}, {"label" : "step", "tail" : ": Option[Step]", "member" : "com.jafpl.graph.Node.step", "link" : "com\/jafpl\/graph\/TryCatchStart.html#step:Option[com.jafpl.steps.Step]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/graph\/TryCatchStart.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/graph\/TryCatchStart.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/graph\/TryCatchStart.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/graph\/TryCatchStart.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/graph\/TryCatchStart.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/graph\/TryCatchStart.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/graph\/TryCatchStart.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/graph\/TryCatchStart.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/graph\/TryCatchStart.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/graph\/TryCatchStart.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/graph\/TryCatchStart.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/graph\/TryCatchStart.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/graph\/TryCatchStart.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/graph\/TryCatchStart.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/graph\/TryCatchStart.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/graph\/TryCatchStart.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/graph\/TryCatchStart.html", "kind" : "class"}], "com.jafpl" : [], "com" : [], "com.jafpl.messages" : [{"name" : "com.jafpl.messages.BindingMessage", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.messages.BindingMessage.toString", "link" : "com\/jafpl\/messages\/BindingMessage.html#toString():String", "kind" : "def"}, {"member" : "com.jafpl.messages.BindingMessage#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": Message", "member" : "com.jafpl.messages.BindingMessage.message", "link" : "com\/jafpl\/messages\/BindingMessage.html#message:com.jafpl.messages.Message", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.jafpl.messages.BindingMessage.name", "link" : "com\/jafpl\/messages\/BindingMessage.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/BindingMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/BindingMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/BindingMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/BindingMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/BindingMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/BindingMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/BindingMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/BindingMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/BindingMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/BindingMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/BindingMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/BindingMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/BindingMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/BindingMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/BindingMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/BindingMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/BindingMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/BindingMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/BindingMessage.html", "kind" : "class"}, {"name" : "com.jafpl.messages.ExceptionMessage", "shortDescription" : "", "members_class" : [{"member" : "com.jafpl.messages.ExceptionMessage#<init>", "error" : "unsupported entity"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.messages.ItemMessage.toString", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#toString():String", "kind" : "def"}, {"label" : "metadata", "tail" : ": Metadata", "member" : "com.jafpl.messages.ItemMessage.metadata", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#metadata:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "item", "tail" : ": Any", "member" : "com.jafpl.messages.ItemMessage.item", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#item:Any", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/ExceptionMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/ExceptionMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/ExceptionMessage.html", "kind" : "class"}, {"name" : "com.jafpl.messages.ItemMessage", "shortDescription" : "A item that flows between two ports.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.messages.ItemMessage.toString", "link" : "com\/jafpl\/messages\/ItemMessage.html#toString():String", "kind" : "def"}, {"member" : "com.jafpl.messages.ItemMessage#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Metadata", "member" : "com.jafpl.messages.ItemMessage.metadata", "link" : "com\/jafpl\/messages\/ItemMessage.html#metadata:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "item", "tail" : ": Any", "member" : "com.jafpl.messages.ItemMessage.item", "link" : "com\/jafpl\/messages\/ItemMessage.html#item:Any", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/ItemMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/ItemMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/ItemMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/ItemMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/ItemMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/ItemMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/ItemMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/ItemMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/ItemMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/ItemMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/ItemMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/ItemMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/ItemMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/ItemMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/ItemMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/ItemMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/ItemMessage.html", "kind" : "class"}, {"name" : "com.jafpl.messages.Message", "shortDescription" : "", "members_class" : [{"member" : "com.jafpl.messages.Message#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Message.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/Message.html", "kind" : "class"}, {"name" : "com.jafpl.messages.Metadata", "shortDescription" : "", "object" : "com\/jafpl\/messages\/Metadata$.html", "members_class" : [{"member" : "com.jafpl.messages.Metadata#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Metadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Metadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Metadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Metadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Metadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Metadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Metadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Metadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Metadata.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Metadata.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Metadata.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Metadata.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Metadata.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Metadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Metadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Metadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "EXCEPTION", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.EXCEPTION", "link" : "com\/jafpl\/messages\/Metadata$.html#EXCEPTION:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "BOOLEAN", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.BOOLEAN", "link" : "com\/jafpl\/messages\/Metadata$.html#BOOLEAN:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "NUMBER", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.NUMBER", "link" : "com\/jafpl\/messages\/Metadata$.html#NUMBER:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "STRING", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.STRING", "link" : "com\/jafpl\/messages\/Metadata$.html#STRING:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "BLANK", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.BLANK", "link" : "com\/jafpl\/messages\/Metadata$.html#BLANK:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "ANY", "tail" : ": Metadata", "member" : "com.jafpl.messages.Metadata.ANY", "link" : "com\/jafpl\/messages\/Metadata$.html#ANY:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/Metadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/Metadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/Metadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/Metadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/Metadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/Metadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/Metadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/Metadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/Metadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/Metadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/jafpl\/messages\/Metadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/Metadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/Metadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/Metadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/Metadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/Metadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/Metadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/Metadata.html", "kind" : "object"}, {"name" : "com.jafpl.messages.PipelineMessage", "shortDescription" : "", "members_class" : [{"member" : "com.jafpl.messages.PipelineMessage#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Metadata", "member" : "com.jafpl.messages.PipelineMessage.metadata", "link" : "com\/jafpl\/messages\/PipelineMessage.html#metadata:com.jafpl.messages.Metadata", "kind" : "val"}, {"label" : "item", "tail" : ": Any", "member" : "com.jafpl.messages.PipelineMessage.item", "link" : "com\/jafpl\/messages\/PipelineMessage.html#item:Any", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "com.jafpl.messages.ItemMessage.toString", "link" : "com\/jafpl\/messages\/PipelineMessage.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/jafpl\/messages\/PipelineMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/jafpl\/messages\/PipelineMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/jafpl\/messages\/PipelineMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/jafpl\/messages\/PipelineMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/jafpl\/messages\/PipelineMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/jafpl\/messages\/PipelineMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/jafpl\/messages\/PipelineMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/PipelineMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/PipelineMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/jafpl\/messages\/PipelineMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/jafpl\/messages\/PipelineMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/jafpl\/messages\/PipelineMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/jafpl\/messages\/PipelineMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/jafpl\/messages\/PipelineMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/jafpl\/messages\/PipelineMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/jafpl\/messages\/PipelineMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/jafpl\/messages\/PipelineMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/jafpl\/messages\/PipelineMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/jafpl\/messages\/PipelineMessage.html", "kind" : "class"}]};